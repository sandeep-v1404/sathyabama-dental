{"version":3,"sources":["constants/userConstants.js","utils/handleHTTPerrors.js","utils/getConfig.js","actions/userActions.js","components/admin/Sidebar.js","components/layout/Header.js","components/layout/Footer.js","constants/patientConstants.js","actions/patientActions.js","components/layout/Search.js","components/layout/Loader.js","components/layout/MetaData.js","components/patient/Patient.js","components/Home.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/admin/PatientList.js","components/admin/NewPatient.js","components/admin/UpdatePatient.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/route/ProtectedRoute.js","constants/departmentConstants.js","store.js","reducers/patientReducers.js","reducers/userReducers.js","reducers/departmentReducers.js","actions/departmentActions.js","components/departments/D1.js","components/departments/D2.js","components/departments/D3.js","components/departments/D4.js","App.js","theme.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","handleHTTPerrors","error","response","data","statusCode","message","getConfig","headers","cookie","load","loadUser","dispatch","a","type","axios","get","payload","err","clearErrors","Sidebar","btnRef","isOpen","onClose","onOpen","ref","colorScheme","onClick","Hamburger","placement","finalFocusRef","defaultIndex","allowMultiple","flex","textAlign","pb","as","MenuItem","height","ReachLink","to","_hover","textDecoration","color","Header","toast","useToast","history","useHistory","useRef","useDisclosure","useDispatch","useColorMode","colorMode","toggleColorMode","useSelector","state","auth","user","loading","bg","useColorModeValue","px","h","alignItems","justifyContent","spacing","boxSize","objectFit","src","aria-label","mr","icon","Moon","Sun","Button","rounded","variant","cursor","size","username","department","btnref","remove","title","status","duration","isClosable","push","Logo","props","viewBox","xmlns","d","fill","SocialButton","children","label","href","w","display","transition","SmallCentered","year","Date","getFullYear","Stack","maxW","py","justify","align","direction","borderTopWidth","borderStyle","borderColor","base","md","ADMIN_PATIENTS_REQUEST","ADMIN_PATIENTS_SUCCESS","ADMIN_PATIENTS_FAIL","PATIENT_REQUEST","PATIENT_SUCCESS","PATIENT_FAIL","NEW_PATIENT_REQUEST","NEW_PATIENT_SUCCESS","NEW_PATIENT_RESET","NEW_PATIENT_FAIL","DELETE_PATIENT_REQUEST","DELETE_PATIENT_SUCCESS","DELETE_PATIENT_RESET","DELETE_PATIENT_FAIL","UPDATE_PATIENT_REQUEST","UPDATE_PATIENT_SUCCESS","UPDATE_PATIENT_RESET","UPDATE_PATIENT_FAIL","PATIENT_DETAILS_REQUEST","PATIENT_DETAILS_SUCCESS","PATIENT_DETAILS_FAIL","getPatients","search","Search","patient","useState","keyword","setKeyword","useEffect","minH","boxShadow","p","fontSize","sm","mb","onSubmit","e","preventDefault","trim","borderWidth","_placeholder","id","required","placeholder","onChange","target","value","Loader","isIndeterminate","MetaData","Helmet","Patient","overflow","fontWeight","lineHeight","isTruncated","name","sex","age","patientDOneData","CheckIcon","patientDTwoData","patientDThreeData","disabled","role","mt","_focus","MainPage","Home","isAuthenticated","col","Login","location","email","setEmail","password","setPassword","React","show","setShow","redirect","split","mx","post","expires","now","save","accessToken","path","login","pr","ViewOff","View","Register","setUser","userData","width","Profile","alt","pos","_after","content","border","bottom","right","fontFamily","hidden","UpdateProfile","setUsername","isUpdated","put","UpdatePassword","oldPassword","setOldPassword","passwords","PatientsList","patients","deleteError","isDeleted","replace","window","reload","alert","deleteProductHandler","delete","success","deletePatient","className","responsive","theadTextWhite","tbodyTextWhite","columns","field","sort","rows","forEach","outPatientId","contact","contactNumber","actions","Edit","Delete","setPatients","bordered","striped","sorting","NewPatient","newPatient","submitHandler","patientData","console","log","initialValues","occupation","residentialAddress","values","selectProps","UpdatePatient","match","loadedValues","setLoadedValues","patientDetails","patientSelector","patientId","params","updateError","updatePatient","isReadOnly","UsersList","allUsers","users","deleteUserHandler","deleteUser","setUsers","UpdateUser","userDetails","userId","updateUser","isSubmitting","ProtectedRoute","isAdmin","Component","component","rest","render","UPDATE_DEPT_DATA_REQUEST","UPDATE_DEPT_DATA_SUCCESS","UPDATE_DEPT_DATA_FAIL","UPDATE_DEPT_DATA_RESET","reducer","combineReducers","action","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","updatePatientDataInDepartment","toString","D1","chiefComplaint","historyOfPresentingIllness","medicalHistory","surgicalHistory","dentalHistory","personalHistory","diet","personalHabits","familyHistory","maritalHistory","stature","appearance","built","nourishment","structuralAlterationsDeformities","hair","skin","pallor","icterus","pedalEdema","cyanosis","bP","respiratoryRate","pulseRate","temperature","cvs","rs","git","cnd","urogenitalSystem","facialSymmetry","earNoseEye","tmj","lips","maxillarySinusTenderness","lymphNodes","intraOralExamination","openingOfTheMouth","interincisalDistance","jawDeviation","teethNumber","teethSize","teethShape","teethColour","teethMissingTooth","teethRestoredTooth","teethStains","teethCaries","teethAttrition","teethAbrasion","teethErosion","teethMobility","teethRootStumps","teethFracture","teethRetainedDeciduous","teethPartiallyErupted","teethDevelopmentalAnomalies","gingivaColour","gingivaContour","gingivaConsistency","gingivaCalculus","gingivalRecession","gingivaPeriodontalPocket","alveolarMucosa","buccalMucosaColour","buccalMucosaConsistency","buccalMucosaOpeningOfStensonSDuct","labialMucosa","palateHardPalate","palateSoftPalate","tongueSize","tongueMovement","tongueAttachment","tongueDorsalSurface","tongueVentralSurface","tongueEdge","tongueLateralSurface","tonsils","floorOfTheMouth","pillarsOfTheFauces","inspection","palpation","summary","provisionalDiagonosis","investigations","finalDiagonosis","treatmentPlan","referalToDepartments","minChildWidth","enableReinitialize","borderRadius","m","D2","medicalHistorydiabetes","medicalHistoryhypertension","medicalHistorycardiacDisorder","medicalHistoryrheumaticFever","medicalHistoryepilepsy","medicalHistorybleedingDisorders","medicalHistoryjaundice","medicalHistoryhepatitis","medicalHistoryasthma","medicalHistorytyphoid","medicalHistorydrugAllergy","medicalHistoryallergicToLAInjections","medicalHistoryanaemia","medicalHistorypregnancy","medicalHistorymenstrualCycle","medicalHistoryothers","familyHistorydiabetes","familyHistorybloodDyscrasias","familyHistoryhypertension","familyHistoryconsanguineousMarriage","familyHistoryothers","clinicalFindings","diagnosis","prognosis","radiographs","treatmentDone","isDisabled","encType","htmlFor","cols","App","exact","D3","D4","PatientList","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7ed7e3a2.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\n\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","export function handleHTTPerrors(error) {\n    const { statusCode } = error.response.data;\n    switch (statusCode) {\n        case 400:\n            return error.response.data.message[0];\n        case 401:\n        case 402:\n        case 403:\n        case 409:\n            return error.response.data.message;\n        default:\n            return error.response.data.message;\n    }\n\n}","import cookie from 'react-cookies';\n\nexport const getConfig = () => {\n    const headers = {\n        'Content-Type': 'application/json',\n    }\n    // eslint-disable-next-line no-unused-expressions\n    cookie.load(\"token\") ? headers['Authorization'] = 'Bearer ' + cookie.load(\"token\") : null;\n    return { headers }\n}\n\n\n\n","import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nimport cookie from 'react-cookies';\nimport { handleHTTPerrors } from \"../utils/handleHTTPerrors\"\nimport { getConfig } from \"../utils/getConfig\"\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOGIN_REQUEST })\n\n        const { data } = await axios.post('/api/auth/signin', { email, password }, getConfig());\n        const expires = new Date(Date.now() + (1000 * 60 * 60 * 2));\n        cookie.save('token', data.accessToken, { path: '/', expires });\n\n        dispatch(loadUser())\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Register user\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const { data } = await axios.post('/api/auth/signup', userData, getConfig())\n\n        const expires = new Date(Date.now() + (1000 * 60 * 60 * 2));\n        cookie.save('token', data.accessToken, { path: '/', expires });\n\n        dispatch(loadUser())\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n\n    try {\n        dispatch({ type: LOAD_USER_REQUEST })\n        const { data } = await axios.get('/api/auth/me', getConfig())\n        dispatch({ type: LOAD_USER_SUCCESS, payload: data })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Update profile\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n        const { data } = await axios.put('/api/auth/user/update', userData, getConfig())\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Update password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const { data } = await axios.put('/api/auth/updatePassword', passwords, getConfig());\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n        cookie.remove('token')\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n// Get all users\nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('/api/auth/users', getConfig())\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n// Update user - ADMIN\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const { data } = await axios.put(`/api/auth/users/${id}`, userData, getConfig())\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get user details - ADMIN\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/auth/users/${id}`, getConfig())\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete user - ADMIN\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST })\n\n        const { data } = await axios.delete(`/api/auth/users/${id}`, getConfig())\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import { HamburgerIcon } from \"@chakra-ui/icons\"\nimport {\n    Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel, Box, Button, Drawer,\n    DrawerBody, DrawerCloseButton, DrawerContent, DrawerHeader,\n    DrawerOverlay, LinkBox, LinkOverlay, MenuItem\n} from \"@chakra-ui/react\"\nimport React from 'react'\nimport { Link as ReachLink } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\n\nfunction Sidebar({ btnRef, isOpen, onClose, onOpen }) {\n\n    return (\n        <>\n            <Button ref={btnRef} colorScheme=\"teal\" onClick={onOpen}>\n                <HamburgerIcon />\n            </Button>\n            <Drawer\n                isOpen={isOpen}\n                placement=\"left\"\n                onClose={onClose}\n                finalFocusRef={btnRef}\n            >\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerCloseButton />\n                    <DrawerHeader>Administrator</DrawerHeader>\n                    <DrawerBody>\n                        <Accordion defaultIndex={[0]} allowMultiple>\n                            <AccordionItem>\n                                <h2>\n                                    <AccordionButton>\n                                        <Box flex=\"1\" textAlign=\"left\">\n                                            Patients\n                                        </Box>\n                                        <AccordionIcon />\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4}>\n                                    <LinkBox as={MenuItem} height=\"30px\">\n                                        <LinkOverlay as={ReachLink} to=\"/admin/patients\" _hover={{\n                                            textDecoration: 'none',\n                                            color: \"black\"\n                                        }}>\n                                            All Patients\n                                        </LinkOverlay>\n                                    </LinkBox>\n                                    <LinkBox as={MenuItem} height=\"30px\">\n                                        <LinkOverlay as={ReachLink} to=\"/admin/patient\" _hover={{\n                                            textDecoration: 'none',\n                                            color: \"black\"\n                                        }}>\n                                            Create\n                                        </LinkOverlay>\n                                    </LinkBox>\n                                </AccordionPanel>\n                            </AccordionItem>\n                            <AccordionItem>\n                                <h2>\n                                    <AccordionButton>\n                                        <Box flex=\"1\" textAlign=\"left\">\n                                            Users\n                                        </Box>\n                                        <AccordionIcon />\n                                    </AccordionButton>\n                                </h2>\n                                <AccordionPanel pb={4}>\n                                    <LinkBox as={MenuItem} height=\"30px\">\n                                        <LinkOverlay as={ReachLink} to=\"/admin/users\" _hover={{\n                                            textDecoration: 'none',\n                                            color: \"black\"\n                                        }}>\n                                            All Users\n                                        </LinkOverlay>\n                                    </LinkBox>\n                                </AccordionPanel>\n                            </AccordionItem>\n                        </Accordion>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </>\n    )\n}\nexport default Sidebar\n\nSidebar.propTypes = {\n    btnRef: PropTypes.any,\n    isOpen: PropTypes.any,\n    onClose: PropTypes.any,\n    onOpen: PropTypes.any\n};","import {\n    MoonIcon, SunIcon\n} from '@chakra-ui/icons';\nimport {\n    Avatar, Box, Button, Flex, HStack, IconButton, LinkBox, LinkOverlay, Menu, Image,\n    MenuButton, MenuDivider, MenuItem, MenuList, useColorMode, useColorModeValue, useDisclosure, useToast\n} from '@chakra-ui/react';\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as ReachLink, useHistory } from \"react-router-dom\";\nimport { logout } from '../../actions/userActions';\nimport Sidebar from \"../admin/Sidebar\";\n\n\nexport default function Header() {\n\n    const toast = useToast()\n    const history = useHistory();\n    const btnRef = useRef()\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const dispatch = useDispatch();\n\n    const { colorMode, toggleColorMode } = useColorMode()\n\n    const { user, loading } = useSelector(state => state.auth);\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        toast({\n            title: 'Logged out successfully.',\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n        })\n        history.push(\"/\");\n    }\n\n    return (\n        <>\n            <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n                <Flex h={16} alignItems={'center'} justifyContent={'space-around'}>\n                    <HStack spacing={8} alignItems={'center'}>\n                        <LinkBox>\n                            <LinkOverlay as={ReachLink} to=\"/\">\n                                <Image boxSize=\"200px\"\n                                    objectFit=\"contain\" src=\"https://www.sathyabama.ac.in/themes/custom/sathyabama/logo.svg\" />\n                            </LinkOverlay>\n                        </LinkBox>\n                    </HStack>\n                    <Flex alignItems={'center'} justifyContent=\"space-between\">\n                        <IconButton\n                            aria-label=\"Call Segun\"\n                            mr={2}\n                            onClick={toggleColorMode}\n                            icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                        />\n                        {user ? (\n                            <Menu>\n                                <MenuButton\n                                    _hover={{\n                                        textDecoration: 'none',\n                                        color: \"black\"\n                                    }}\n                                    as={Button}\n                                    mr={2}\n                                    rounded={'full'}\n                                    variant={'link'}\n                                    cursor={'pointer'}>\n                                    <Flex alignItems=\"center\">\n                                        <Avatar\n                                            size={'sm'}\n                                            mr={2}\n                                            src={\n                                                \"https://bit.ly/sage-adebayo\"\n                                            }\n                                        />\n                                        {user && user.username}\n                                    </Flex>\n                                </MenuButton>\n                                {user && user.department === 'Administrator' && (\n                                    <Sidebar btnref={btnRef} isOpen={isOpen} onClose={onClose} onOpen={onOpen} />\n                                )}\n                                <MenuList>\n                                    <LinkBox>\n                                        <MenuItem>\n                                            <LinkOverlay _hover={{\n                                                textDecoration: 'none',\n                                                color: \"black\"\n                                            }} as={ReachLink} to=\"/me\">\n                                                Profile\n                                            </LinkOverlay>\n                                        </MenuItem>\n                                    </LinkBox>\n                                    <MenuDivider />\n                                    <LinkBox>\n                                        <MenuItem color={\"red\"}>\n                                            <LinkOverlay _hover={{\n                                                textDecoration: 'none',\n                                                color: \"black\"\n                                            }} as={ReachLink} to=\"/me\" onClick={logoutHandler}>\n                                                Logout\n                                            </LinkOverlay>\n                                        </MenuItem>\n                                    </LinkBox>\n                                </MenuList>\n                            </Menu>\n                        ) : !loading &&\n                        <LinkBox>\n                            <Button colorScheme=\"teal\" variant=\"solid\" >\n                                <LinkOverlay as={ReachLink} to=\"/login\" _hover={{\n                                    textDecoration: 'none',\n                                    color: \"black\"\n                                }}>\n                                    Login\n                                </LinkOverlay>\n                            </Button>\n                        </LinkBox>\n                        }\n                    </Flex>\n                </Flex>\n            </Box>\n        </>\n    );\n}","import {\n    Box,\n    Button,\n    Container,\n    Link,\n    Stack,\n    Text,\n    useColorModeValue,\n    VisuallyHidden,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Logo = (props) => {\n    return (\n        <svg\n            height={32}\n            viewBox=\"0 0 120 28\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            {...props}>\n            <path\n                d=\"M34.87 8.07H37.87V20.2H34.87V8.07ZM39.06 15.62C39.06 12.62 40.9 10.83 43.74 10.83C46.58 10.83 48.42 12.62 48.42 15.62C48.42 18.62 46.62 20.42 43.74 20.42C40.86 20.42 39.06 18.67 39.06 15.62ZM45.41 15.62C45.41 13.97 44.76 13 43.74 13C42.72 13 42.08 14 42.08 15.62C42.08 17.24 42.71 18.22 43.74 18.22C44.77 18.22 45.41 17.3 45.41 15.63V15.62ZM49.55 20.79H52.43C52.5671 21.0945 52.7988 21.3466 53.0907 21.5088C53.3826 21.6709 53.7191 21.7345 54.05 21.69C55.19 21.69 55.79 21.07 55.79 20.17V18.49H55.73C55.491 19.0049 55.1031 19.4363 54.6165 19.7287C54.1299 20.021 53.5668 20.1608 53 20.13C50.81 20.13 49.36 18.46 49.36 15.59C49.36 12.72 50.74 10.91 53.04 10.91C53.6246 10.8871 54.2022 11.0434 54.6955 11.3579C55.1888 11.6725 55.5742 12.1303 55.8 12.67V12.67V11H58.8V20.1C58.8 22.29 56.87 23.65 54.02 23.65C51.37 23.65 49.72 22.46 49.55 20.8V20.79ZM55.8 15.61C55.8 14.15 55.13 13.23 54.07 13.23C53.01 13.23 52.36 14.14 52.36 15.61C52.36 17.08 53 17.91 54.07 17.91C55.14 17.91 55.8 17.1 55.8 15.62V15.61ZM59.93 15.61C59.93 12.61 61.77 10.82 64.61 10.82C67.45 10.82 69.3 12.61 69.3 15.61C69.3 18.61 67.5 20.41 64.61 20.41C61.72 20.41 59.93 18.67 59.93 15.62V15.61ZM66.28 15.61C66.28 13.96 65.63 12.99 64.61 12.99C63.59 12.99 63 14 63 15.63C63 17.26 63.63 18.23 64.65 18.23C65.67 18.23 66.28 17.3 66.28 15.63V15.61ZM70.44 8.82C70.4321 8.51711 70.5144 8.2187 70.6763 7.96261C70.8383 7.70651 71.0726 7.50427 71.3496 7.38151C71.6266 7.25875 71.9338 7.221 72.2323 7.27305C72.5308 7.32511 72.8071 7.46462 73.0262 7.67389C73.2454 7.88317 73.3974 8.1528 73.4631 8.44859C73.5288 8.74438 73.5052 9.05301 73.3952 9.33536C73.2853 9.61772 73.094 9.86108 72.8456 10.0346C72.5973 10.2081 72.3029 10.304 72 10.31C71.7992 10.3238 71.5977 10.2959 71.4082 10.2281C71.2186 10.1603 71.0452 10.0541 70.8987 9.91601C70.7522 9.77796 70.6358 9.61111 70.5569 9.42594C70.4779 9.24077 70.4381 9.04128 70.44 8.84V8.82ZM70.44 11.02H73.44V20.2H70.44V11.02ZM84.33 15.61C84.33 18.61 83 20.32 80.72 20.32C80.1354 20.3575 79.5533 20.2146 79.0525 19.9106C78.5517 19.6065 78.1564 19.156 77.92 18.62H77.86V23.14H74.86V11H77.86V12.64H77.92C78.1454 12.0951 78.5332 11.6329 79.0306 11.3162C79.528 10.9995 80.1109 10.8437 80.7 10.87C83 10.91 84.37 12.63 84.37 15.63L84.33 15.61ZM81.33 15.61C81.33 14.15 80.66 13.22 79.61 13.22C78.56 13.22 77.89 14.16 77.88 15.61C77.87 17.06 78.56 17.99 79.61 17.99C80.66 17.99 81.33 17.08 81.33 15.63V15.61ZM89.48 10.81C91.97 10.81 93.48 11.99 93.55 13.88H90.82C90.82 13.23 90.28 12.82 89.45 12.82C88.62 12.82 88.25 13.14 88.25 13.61C88.25 14.08 88.58 14.23 89.25 14.37L91.17 14.76C93 15.15 93.78 15.89 93.78 17.28C93.78 19.18 92.05 20.4 89.5 20.4C86.95 20.4 85.28 19.18 85.15 17.31H88.04C88.13 17.99 88.67 18.39 89.55 18.39C90.43 18.39 90.83 18.1 90.83 17.62C90.83 17.14 90.55 17.04 89.83 16.89L88.1 16.52C86.31 16.15 85.37 15.2 85.37 13.8C85.39 12 87 10.83 89.48 10.83V10.81ZM103.79 20.18H100.9V18.47H100.84C100.681 19.0441 100.331 19.5466 99.8468 19.8941C99.3629 20.2415 98.7748 20.413 98.18 20.38C97.7242 20.4059 97.2682 20.3337 96.8427 20.1682C96.4172 20.0027 96.0322 19.7479 95.7137 19.4208C95.3952 19.0938 95.1505 18.7021 94.9964 18.2724C94.8422 17.8427 94.7821 17.3849 94.82 16.93V11H97.82V16.24C97.82 17.33 98.38 17.91 99.31 17.91C99.5281 17.9104 99.7437 17.8643 99.9425 17.7746C100.141 17.6849 100.319 17.5537 100.463 17.3899C100.606 17.226 100.714 17.0333 100.777 16.8247C100.84 16.616 100.859 16.3962 100.83 16.18V11H103.83L103.79 20.18ZM105.24 11H108.14V12.77H108.2C108.359 12.2035 108.702 11.7057 109.174 11.3547C109.646 11.0037 110.222 10.8191 110.81 10.83C111.409 10.7821 112.003 10.9612 112.476 11.3318C112.948 11.7024 113.264 12.2372 113.36 12.83H113.42C113.601 12.2309 113.977 11.7093 114.488 11.3472C114.998 10.9851 115.615 10.8031 116.24 10.83C116.648 10.8163 117.054 10.8886 117.432 11.0422C117.811 11.1957 118.152 11.4272 118.435 11.7214C118.718 12.0157 118.936 12.3662 119.075 12.7501C119.213 13.134 119.27 13.5429 119.24 13.95V20.2H116.24V14.75C116.24 13.75 115.79 13.29 114.95 13.29C114.763 13.2884 114.577 13.327 114.406 13.4032C114.235 13.4794 114.082 13.5914 113.958 13.7317C113.834 13.872 113.741 14.0372 113.686 14.2163C113.631 14.3955 113.616 14.5843 113.64 14.77V20.2H110.79V14.71C110.79 13.79 110.34 13.29 109.52 13.29C109.331 13.2901 109.143 13.3303 108.971 13.408C108.798 13.4858 108.643 13.5993 108.518 13.741C108.392 13.8827 108.298 14.0495 108.241 14.2304C108.185 14.4112 108.167 14.6019 108.19 14.79V20.2H105.19L105.24 11Z\"\n                fill=\"currentColor\"\n            />\n            <path\n                d=\"M26.48 8.62001C25.9711 7.45637 25.2975 6.37195 24.48 5.40001C23.2714 3.92035 21.7632 2.71341 20.0546 1.85862C18.346 1.00383 16.4758 0.520582 14.567 0.440674C12.6582 0.360766 10.7541 0.68601 8.98 1.395C7.20594 2.104 5.60214 3.18067 4.27417 4.55414C2.94619 5.92762 1.92414 7.56676 1.27529 9.36369C0.626436 11.1606 0.365493 13.0746 0.509634 14.9796C0.653775 16.8847 1.19973 18.7376 2.11157 20.4164C3.02341 22.0953 4.28046 23.562 5.79998 24.72C6.77498 25.4779 7.85233 26.094 8.99998 26.55C10.609 27.2094 12.3311 27.549 14.07 27.55C17.6594 27.5421 21.0992 26.1113 23.6354 23.5713C26.1717 21.0314 27.5973 17.5894 27.6 14C27.6026 12.1485 27.2213 10.3166 26.48 8.62001V8.62001ZM14.06 3.19001C15.6215 3.18984 17.1642 3.53115 18.58 4.19001V4.19001C18.2347 4.33918 17.8718 4.44337 17.5 4.50001C16.2766 4.67711 15.1432 5.24509 14.2691 6.11918C13.3951 6.99328 12.8271 8.12661 12.65 9.35001C12.5722 10.0361 12.2602 10.6744 11.7665 11.1572C11.2728 11.64 10.6277 11.9377 9.93998 12C8.71657 12.1771 7.58324 12.7451 6.70915 13.6192C5.83505 14.4933 5.26707 15.6266 5.08998 16.85C5.03002 17.5024 4.75167 18.1155 4.29998 18.59V18.59C3.52063 16.9433 3.17053 15.1261 3.28225 13.3077C3.39397 11.4893 3.96388 9.72871 4.93895 8.18976C5.91401 6.65081 7.26255 5.38353 8.85905 4.50586C10.4555 3.62819 12.2481 3.16865 14.07 3.17001L14.06 3.19001ZM5.78998 21C5.90998 20.89 6.02998 20.79 6.14998 20.67C7.03963 19.8075 7.61069 18.6689 7.76998 17.44C7.83456 16.7493 8.14298 16.1041 8.63998 15.62C9.11822 15.1222 9.76195 14.8163 10.45 14.76C11.6734 14.5829 12.8067 14.0149 13.6808 13.1408C14.5549 12.2667 15.1229 11.1334 15.3 9.91001C15.3432 9.18752 15.6533 8.50685 16.17 8.00001C16.66 7.51186 17.3099 7.21711 18 7.17001C19.1239 7.01537 20.1721 6.51573 21 5.74001C21.9426 6.52208 22.7413 7.46291 23.36 8.52001C23.322 8.57136 23.2784 8.61832 23.23 8.66001C22.7526 9.16221 22.1098 9.47477 21.42 9.54001C20.1953 9.71401 19.0603 10.281 18.1856 11.1557C17.311 12.0303 16.744 13.1654 16.57 14.39C16.4995 15.0784 16.1932 15.7213 15.7029 16.2098C15.2127 16.6982 14.5687 17.0021 13.88 17.07C12.653 17.2458 11.5154 17.8126 10.6363 18.6863C9.75713 19.5601 9.18328 20.6941 8.99998 21.92C8.94616 22.4087 8.77832 22.878 8.50998 23.29C7.48397 22.6808 6.56506 21.9072 5.78998 21V21ZM14.06 24.86C13.0452 24.8611 12.0354 24.7197 11.06 24.44C11.3936 23.818 11.6106 23.1402 11.7 22.44C11.7701 21.7531 12.0749 21.1114 12.5632 20.6232C13.0514 20.135 13.6931 19.8301 14.38 19.76C15.6052 19.5849 16.7408 19.0178 17.6168 18.1435C18.4929 17.2693 19.0624 16.1349 19.24 14.91C19.3101 14.2231 19.6149 13.5814 20.1032 13.0932C20.5914 12.605 21.2331 12.3001 21.92 12.23C22.842 12.1101 23.7208 11.7668 24.48 11.23C24.9015 12.8279 24.9515 14.5012 24.626 16.1214C24.3004 17.7416 23.6081 19.2657 22.6021 20.5768C21.5961 21.8879 20.3031 22.9511 18.8224 23.6849C17.3417 24.4187 15.7125 24.8036 14.06 24.81V24.86Z\"\n                fill=\"#2F855A\"\n            />\n        </svg>\n    );\n};\n\nconst SocialButton = ({\n    children,\n    label,\n    href,\n}) => {\n    return (\n        <Button\n            bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n            rounded={'full'}\n            w={8}\n            h={8}\n            cursor={'pointer'}\n            as={'a'}\n            href={href}\n            display={'inline-flex'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            transition={'background 0.3s ease'}\n            _hover={{\n                bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n            }}>\n            <VisuallyHidden>{label}</VisuallyHidden>\n            {children}\n        </Button>\n    );\n};\n\nexport default function SmallCentered() {\n    const year = new Date().getFullYear();\n    return (\n        <Box\n            bg={useColorModeValue('gray.50', 'gray.900')}\n            color={useColorModeValue('gray.700', 'gray.200')}>\n            <Container\n                as={Stack}\n                maxW={'6xl'}\n                py={4}\n                spacing={4}\n                justify={'center'}\n                align={'center'}>\n                <Logo />\n                <Stack direction={'row'} spacing={6}>\n                    <Link href={'#'}>Home</Link>\n                    <Link href={'#'}>About</Link>\n                    <Link href={'#'}>Blog</Link>\n                    <Link href={'#'}>Contact</Link>\n                </Stack>\n            </Container>\n\n            <Box\n                borderTopWidth={1}\n                borderStyle={'solid'}\n                borderColor={useColorModeValue('gray.200', 'gray.700')}>\n                <Container\n                    as={Stack}\n                    maxW={'6xl'}\n                    py={4}\n                    direction={{ base: 'column', md: 'row' }}\n                    spacing={4}\n                    justify={{ base: 'center', md: 'space-between' }}\n                    align={{ base: 'center', md: 'center' }}>\n                    <Text>© {year} Sathyabama Dental. All rights reserved</Text>\n                    <Stack direction={'row'} spacing={6}>\n                        <SocialButton label={'Twitter'} href={'#'}>\n                            {/* <FaTwitter /> */}\n                        </SocialButton>\n                        <SocialButton label={'YouTube'} href={'#'}>\n                            {/* <FaYoutube /> */}\n                        </SocialButton>\n                        <SocialButton label={'Instagram'} href={'#'}>\n                            {/* <FaInstagram /> */}\n                        </SocialButton>\n                    </Stack>\n                </Container>\n            </Box>\n        </Box>\n    );\n}\nSocialButton.propTypes = {\n    children: PropTypes.any,\n    label: PropTypes.any,\n    href: PropTypes.any,\n};","export const ADMIN_PATIENTS_REQUEST = 'ADMIN_PATIENTS_REQUEST'\nexport const ADMIN_PATIENTS_SUCCESS = 'ADMIN_PATIENTS_SUCCESS'\nexport const ADMIN_PATIENTS_FAIL = 'ADMIN_PATIENTS_FAIL'\n\nexport const PATIENT_REQUEST = 'PATIENT_REQUEST'\nexport const PATIENT_SUCCESS = 'PATIENT_SUCCESS'\nexport const PATIENT_FAIL = 'PATIENT_FAIL'\n\nexport const NEW_PATIENT_REQUEST = 'NEW_PATIENT_REQUEST'\nexport const NEW_PATIENT_SUCCESS = 'NEW_PATIENT_SUCCESS'\nexport const NEW_PATIENT_RESET = 'NEW_PATIENT_RESET'\nexport const NEW_PATIENT_FAIL = 'NEW_PATIENT_FAIL'\n\nexport const DELETE_PATIENT_REQUEST = 'DELETE_PATIENT_REQUEST'\nexport const DELETE_PATIENT_SUCCESS = 'DELETE_PATIENT_SUCCESS'\nexport const DELETE_PATIENT_RESET = 'DELETE_PATIENT_RESET'\nexport const DELETE_PATIENT_FAIL = 'DELETE_PATIENT_FAIL'\n\nexport const UPDATE_PATIENT_REQUEST = 'UPDATE_PATIENT_REQUEST'\nexport const UPDATE_PATIENT_SUCCESS = 'UPDATE_PATIENT_SUCCESS'\nexport const UPDATE_PATIENT_RESET = 'UPDATE_PATIENT_RESET'\nexport const UPDATE_PATIENT_FAIL = 'UPDATE_PATIENT_FAIL'\n\nexport const PATIENT_DETAILS_REQUEST = 'PATIENT_DETAILS_REQUEST'\nexport const PATIENT_DETAILS_SUCCESS = 'PATIENT_DETAILS_SUCCESS'\nexport const PATIENT_DETAILS_FAIL = 'PATIENT_DETAILS_FAIL'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\n\nimport {\n    PATIENT_REQUEST,\n    PATIENT_SUCCESS,\n    PATIENT_FAIL,\n    ADMIN_PATIENTS_REQUEST,\n    ADMIN_PATIENTS_SUCCESS,\n    ADMIN_PATIENTS_FAIL,\n    NEW_PATIENT_REQUEST,\n    NEW_PATIENT_SUCCESS,\n    NEW_PATIENT_FAIL,\n    DELETE_PATIENT_REQUEST,\n    DELETE_PATIENT_SUCCESS,\n    DELETE_PATIENT_FAIL,\n    UPDATE_PATIENT_REQUEST,\n    UPDATE_PATIENT_SUCCESS,\n    UPDATE_PATIENT_FAIL,\n    PATIENT_DETAILS_REQUEST,\n    PATIENT_DETAILS_SUCCESS,\n    PATIENT_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/patientConstants'\n\nimport { handleHTTPerrors } from \"../utils/handleHTTPerrors\"\nimport { getConfig } from \"../utils/getConfig\"\n\nexport const getPatients = (search) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PATIENT_REQUEST })\n        const { data } = await axios.get(`/api/patients/${search}`, getConfig());\n\n        dispatch({\n            type: PATIENT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: PATIENT_FAIL,\n            payload: err\n        })\n    }\n}\n\nexport const newPatient = (patientData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PATIENT_REQUEST })\n\n        const { data } = await axios.post(`/api/patients`, patientData, getConfig());\n        dispatch({\n            type: NEW_PATIENT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: NEW_PATIENT_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Delete patient (Admin)\nexport const deletePatient = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PATIENT_REQUEST })\n\n        const { data } = await axios.delete(`/api/patients/${id}`, getConfig())\n\n        dispatch({\n            type: DELETE_PATIENT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: DELETE_PATIENT_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Update Patient (ADMIN)\nexport const updatePatient = (id, patientData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PATIENT_REQUEST })\n\n        const { data } = await axios.put(`/api/patients/${id}`, patientData, getConfig())\n\n        dispatch({\n            type: UPDATE_PATIENT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        console.log(error);\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: UPDATE_PATIENT_FAIL,\n            payload: err\n        })\n    }\n}\n\nexport const getPatientDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PATIENT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/patients/admin/${id}`, getConfig())\n\n        dispatch({\n            type: PATIENT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: PATIENT_DETAILS_FAIL,\n            payload: err\n        })\n    }\n}\n\nexport const getAdminPatients = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PATIENTS_REQUEST })\n\n        const { data } = await axios.get(`/api/patients`, getConfig())\n        dispatch({\n            type: ADMIN_PATIENTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: ADMIN_PATIENTS_FAIL,\n            payload: err\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import {\n    Avatar, Button, Center, Container,\n    Flex, FormControl, Heading, Input, Stack, useColorModeValue, useToast\n} from '@chakra-ui/react';\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPatients, clearErrors } from \"../../actions/patientActions\"\n\nexport default function Search({ history }) {\n\n    const toast = useToast()\n    const { error } = useSelector(state => state.patient)\n\n    const [keyword, setKeyword] = useState('');\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            history.push(\"/\");\n            return;\n        }\n        if (keyword) {\n            dispatch(clearErrors())\n            dispatch(getPatients(keyword))\n            return;\n        }\n\n    }, [dispatch, error])\n\n\n    const searchHandler = (e) => {\n        e.preventDefault()\n        if (keyword.trim()) {\n            dispatch(getPatients(keyword))\n        } else {\n            history.push('/')\n        }\n    }\n    return (\n        <Flex\n            minH={'100vh'}\n            align={'center'}\n            justify={'center'}\n            bg={useColorModeValue('gray.50', 'gray.800')}>\n            <Container\n                maxW={'lg'}\n                bg={useColorModeValue('white', 'whiteAlpha.100')}\n                boxShadow={'xl'}\n                rounded={'lg'}\n                p={6}\n                direction={'column'}>\n                <Center h=\"100px\" color=\"white\">\n                    <Avatar size=\"lg\" />\n                </Center>\n                <Heading\n                    as={'h2'}\n                    fontSize={{ base: 'xl', sm: '2xl' }}\n                    textAlign={'center'}\n                    mb={5}>\n                    Search By Patient OP Id\n                </Heading>\n                <Stack\n                    direction={{ base: 'column', md: 'row' }}\n                    as={'form'}\n                    spacing={'12px'}\n                    onSubmit={searchHandler}>\n                    <FormControl>\n                        <Input\n                            variant={'solid'}\n                            borderWidth={1}\n                            color={'gray.800'}\n                            _placeholder={{\n                                color: 'gray.400',\n                            }}\n                            borderColor={useColorModeValue('gray.300', 'gray.700')}\n                            id={'email'}\n                            type=\"text\"\n                            required\n                            placeholder={'Enter Id Here'}\n                            aria-label={'Patient Id'}\n                            onChange={(e) => setKeyword(e.target.value)}\n                        />\n                    </FormControl>\n                    <FormControl w={{ base: '100%', md: '40%' }}>\n                        <Button\n                            colorScheme={'blue'}\n                            w=\"100%\"\n                            type={'submit'}>\n                            Submit\n                        </Button>\n                    </FormControl>\n                </Stack>\n            </Container>\n        </Flex>\n    );\n}\n\nSearch.propTypes = {\n    history: PropTypes.any,\n};","import {\n    Center, CircularProgress, Flex, useColorModeValue\n} from '@chakra-ui/react';\nimport React from 'react';\nconst Loader = () => {\n    return (\n        <Flex\n            minH={'100vh'}\n            align={'center'}\n            justify={'center'}\n            bg={useColorModeValue('gray.50', 'gray.800')}>\n            <Center h=\"100px\" >\n                <CircularProgress isIndeterminate color=\"green.300\" />\n            </Center>\n        </Flex >\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types';\n\nconst MetaData = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{`${title} - Sathyabama Dental`}</title>\n        </Helmet>\n    )\n}\n\nexport default MetaData\nMetaData.propTypes = {\n    title: PropTypes.string,\n};","import { CheckIcon } from '@chakra-ui/icons';\nimport {\n    Box, Button, Flex, List, ListIcon, ListItem, Stack, Text, useColorModeValue\n} from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { useSelector, } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nexport default function Patient({ patient }) {\n    const { user } = useSelector(state => state.auth);\n    const history = useHistory()\n    return (\n        <Flex\n            minH={'100vh'}\n            align={'center'}\n            justify={'center'}\n            bg={useColorModeValue('gray.50', 'gray.800')}>\n\n            <Box\n                w={[300, 400, 600]}\n                bg={useColorModeValue('white', 'gray.800')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                overflow={'hidden'}>\n                <Stack\n                    textAlign={'center'}\n                    p={6}\n                    color={useColorModeValue('gray.800', 'white')}\n                    align={'center'}>\n                    <Box\n                        fontSize=\"2xl\"\n                        fontWeight=\"semibold\"\n                        as=\"h4\"\n                        lineHeight=\"tight\"\n                        isTruncated>\n                        {patient.name}\n                    </Box>\n                    <Text\n                        fontSize={'sm'}\n                        fontWeight={500}\n                        bg={useColorModeValue('green.50', 'green.900')}\n                        p={2}\n                        px={3}\n                        color={'green.500'}\n                        rounded={'full'}>\n                        {patient.sex}\n                    </Text>\n                    <Stack direction={'row'} align={'center'} justify={'center'}>\n                        <Text fontSize={'6xl'} fontWeight={800}>\n                            {patient.age}\n                        </Text>\n                    </Stack>\n                </Stack>\n                <Box align={'center'} bg={useColorModeValue('gray.50', 'gray.900')} px={6} py={10}>\n                    <List spacing={3}>\n                        {\n                            patient.patientDOneData && <ListItem _hover={{ color: 'blue.300', cursor: 'pointer' }} onClick={() => history.push(`/D1/${patient.id}`)}>\n                                <ListIcon as={CheckIcon} color=\"green.400\" />\n                                Tested by D1\n                            </ListItem>\n                        }\n                        {\n                            patient.patientDTwoData && <ListItem _hover={{ color: 'blue.300', cursor: 'pointer' }} onClick={() => history.push(`/D2/${patient.id}`)}>\n                                <ListIcon as={CheckIcon} color=\"green.400\" />\n                                Tested by D2\n                            </ListItem>\n                        }\n                        {\n                            patient.patientDThreeData && <ListItem _hover={{ color: 'blue.300', cursor: 'pointer' }} onClick={() => history.push(`/D3/${patient.id}`)}>\n                                <ListIcon as={CheckIcon} color=\"green.400\" />\n                                Tested by D3\n                            </ListItem>\n                        }\n                    </List>\n                    {\n                        user.department !== \"Administrator\" &&\n                        <Button\n                            disabled={user.role === \"Unauthorized\"}\n                            mt={10}\n                            w={'full'}\n                            bg={'green.400'}\n                            color={'white'}\n                            rounded={'xl'}\n                            boxShadow={'0 5px 20px 0px rgb(72 187 120 / 43%)'}\n                            onClick={() => { history.push(`/${user.department}/${patient.id}`) }}\n                            _hover={{\n                                bg: 'green.500',\n                            }}\n                            _focus={{\n                                bg: 'green.500',\n                            }}>\n                            Fill {user.department}&lsquo;s data\n                        </Button>\n                    }\n                </Box>\n            </Box>\n        </Flex>\n    );\n}\n\nPatient.propTypes = {\n    patient: PropTypes.any,\n};","import {\n    Button, Container, Flex, Stack,\n    Text, useColorModeValue, Heading\n} from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport 'rc-slider/assets/index.css';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Search from \"../components/layout/Search\";\nimport {\n    PATIENT_FAIL\n} from \"../constants/patientConstants\";\nimport Loader from './layout/Loader';\nimport MetaData from \"./layout/MetaData\";\nimport Patient from './patient/Patient';\n\nfunction MainPage() {\n    return (\n        <Container maxW={'5xl'} minH={\"100vh\"}>\n            <Stack\n                textAlign={'center'}\n                align={'center'}\n                spacing={{ base: 8, md: 10 }}\n                py={{ base: 20, md: 28 }}>\n                <Heading\n                    fontWeight={600}\n                    fontSize={{ base: '3xl', sm: '4xl', md: '6xl' }}\n                    lineHeight={'110%'}>\n                    Meeting scheduling{' '}\n                    <Text as={'span'} color={'orange.400'}>\n                        made easy\n                    </Text>\n                </Heading>\n                <Text color={'gray.500'} maxW={'3xl'}>\n                    Never miss a meeting. Never be late for one too. Keep track of your\n                    meetings and receive smart reminders in appropriate times. Read your\n                    smart “Daily Agenda” every morning.\n                </Text>\n                <Stack spacing={6} direction={'row'}>\n                    <Button\n                        rounded={'full'}\n                        px={6}\n                        colorScheme={'orange'}\n                        bg={'orange.400'}\n                        _hover={{ bg: 'orange.500' }}>\n                        Get started\n                    </Button>\n                    <Button rounded={'full'} px={6}>\n                        Learn more\n                    </Button>\n                </Stack>\n            </Stack>\n        </Container>\n    );\n}\n\nconst Home = ({ history }) => {\n\n    const { isAuthenticated } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    const { loading, patient } = useSelector(state => state.patient)\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Sathyabama Dental - Home'} />\n\n                    {!isAuthenticated ? <MainPage /> :\n                        <>\n                            {\n                                patient ? <>\n                                    <Flex\n                                        align={'center'}\n                                        justify={'center'}\n                                        bg={useColorModeValue('gray.50', 'gray.800')}>\n                                        <Container\n                                            maxW={'lg'}\n                                            bg={useColorModeValue('white', 'whiteAlpha.100')}\n                                            boxShadow={'xl'}\n                                            rounded={'lg'}\n                                            p={6}\n                                            direction={'column'}>\n                                            <Stack\n                                                spacing={'12px'}\n                                            >\n                                                <Button\n                                                    colorScheme={'blue'}\n                                                    w=\"100%\"\n                                                    onClick={() => dispatch({ type: PATIENT_FAIL })}\n                                                >\n                                                    Search for Other Patient\n                                                </Button>\n                                            </Stack>\n                                        </Container>\n                                    </Flex>\n                                    <Patient key={patient.id} patient={patient} col={12} />\n                                </>\n                                    :\n                                    <Search history={history} />\n                            }\n                        </>\n                    }\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Home;\n\nHome.propTypes = {\n    history: PropTypes.any,\n    match: PropTypes.any\n};","import {\n    Box, Button, Flex, FormControl,\n    FormLabel, Heading, Input, InputGroup, InputRightElement, Link, Stack, useColorModeValue, useToast\n} from '@chakra-ui/react'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link as ReachLink } from \"react-router-dom\"\nimport { clearErrors, login } from '../../actions/userActions'\nimport MetaData from '../layout/MetaData'\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons'\n\nexport default function Login({ history, location }) {\n    const toast = useToast()\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [show, setShow] = React.useState(false)\n    const handleClick = () => setShow(!show)\n\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, isAuthenticated, error, history, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <>\n            <MetaData title={'Login'} />\n\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                <Stack spacing={8} mx={'auto'} w={[400, 500, 600]} py={12} px={6}>\n                    <Stack align={'center'}>\n                        <Heading fontSize={'4xl'}>Sign in to your account</Heading>\n                    </Stack>\n                    <Box\n                        rounded={'lg'}\n                        bg={useColorModeValue('white', 'gray.700')}\n                        boxShadow={'lg'}\n                        p={8}>\n                        <Stack as={'form'} spacing={4} onSubmit={submitHandler}>\n                            <FormControl id=\"email\">\n                                <FormLabel>Email address</FormLabel>\n                                <Input\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)} />\n                            </FormControl>\n                            <FormControl id=\"password\">\n                                <FormLabel>Password</FormLabel>\n                                <InputGroup size=\"md\">\n                                    <Input\n                                        name=\"password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        pr=\"4.5rem\"\n                                        type={show ? \"text\" : \"password\"}\n                                        placeholder=\"Enter password\"\n                                    />\n                                    <InputRightElement onClick={handleClick} _hover={{ cursor: \"pointer\" }}>\n                                        {show ? <ViewOffIcon /> : <ViewIcon />}\n                                    </InputRightElement>\n                                </InputGroup>\n                            </FormControl>\n                            <Stack spacing={10}>\n                                <Button\n                                    type={\"submit\"}\n                                    boxShadow={\n                                        '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                                    }\n                                    bg={'blue.400'}\n                                    color={'white'}\n                                    _hover={{\n                                        bg: 'blue.500',\n                                    }}>\n                                    Sign in\n                                </Button>\n                            </Stack>\n                            <Stack\n                                direction={{ base: 'column', sm: 'row' }}\n                                justify={'space-between'}>\n                                <Link as={ReachLink} to=\"/register\" color={'blue.400'}>New User? SignUp</Link>\n                            </Stack>\n                        </Stack>\n                    </Box>\n                </Stack>\n            </Flex>\n        </>\n    );\n}\n\nLogin.propTypes = {\n    history: PropTypes.any,\n    location: PropTypes.any,\n};","import {\n    Box, Button, Flex, FormControl,\n    FormLabel, Heading, Input, Link, Stack, useColorModeValue, Select, InputGroup, InputRightElement, useToast\n} from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link as ReachLink } from \"react-router-dom\"\nimport { clearErrors, register } from '../../actions/userActions'\nimport MetaData from '../layout/MetaData'\nimport PropTypes from 'prop-types';\n\nexport default function Register({ history }) {\n    const toast = useToast()\n    const [user, setUser] = useState({\n        username: '',\n        email: '',\n        password: '',\n        department: '',\n    });\n    const [show, setShow] = React.useState(false)\n    const handleClick = () => setShow(!show)\n\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/')\n        }\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors());\n        }\n    }, [dispatch, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(register(user))\n\n    }\n    const onChange = (e) => {\n        setUser({ ...user, [e.target.name]: e.target.value })\n    }\n\n    return (\n        <>\n            <MetaData title={'Register User'} />\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                <Stack spacing={8} mx={'auto'} w={[400, 500, 600]} py={12} px={6}>\n                    <Stack align={'center'}>\n                        <Heading fontSize={'4xl'}>Create a new account</Heading>\n                    </Stack>\n                    <Box\n                        rounded={'lg'}\n                        bg={useColorModeValue('white', 'gray.700')}\n                        boxShadow={'lg'}\n                        p={8}>\n                        <Stack as={'form'} spacing={4} onSubmit={submitHandler}>\n                            <FormControl id=\"name\">\n                                <FormLabel>Username</FormLabel>\n                                <Input\n                                    name=\"username\"\n                                    type=\"text\"\n                                    value={user.username}\n                                    onChange={onChange} />\n                            </FormControl>\n                            <FormControl id=\"email\">\n                                <FormLabel>Email address</FormLabel>\n                                <Input\n                                    name=\"email\"\n                                    type=\"email\"\n                                    value={user.email}\n                                    onChange={onChange} />\n                            </FormControl>\n                            <FormControl >\n                                <FormLabel>Password</FormLabel>\n                                <InputGroup size=\"md\">\n                                    <Input\n                                        name=\"password\"\n                                        value={user.password}\n                                        onChange={onChange}\n                                        pr=\"4.5rem\"\n                                        type={show ? \"text\" : \"password\"}\n                                        placeholder=\"Enter password\"\n                                    />\n                                    <InputRightElement width=\"4.5rem\">\n                                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                                            {show ? \"Hide\" : \"Show\"}\n                                        </Button>\n                                    </InputRightElement>\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl >\n                                <FormLabel>Department</FormLabel>\n                                <Select placeholder=\"Select option\" value={user.department} name=\"department\" onChange={onChange}>\n                                    <option value=\"D1\">D1</option>\n                                    <option value=\"D2\">D2</option>\n                                    <option value=\"D3\">D3</option>\n                                    <option value=\"D4\">D4</option>\n                                    <option value=\"D5\">D5</option>\n                                    <option value=\"D6\">D6</option>\n                                    <option value=\"D7\">D7</option>\n                                    <option value=\"D8\">D8</option>\n                                    <option value=\"D9\">D9</option>\n                                </Select>\n                            </FormControl>\n                            <Stack spacing={10}>\n                                <Button\n                                    disabled={loading ? true : false}\n                                    type={\"submit\"}\n                                    bg={'blue.400'}\n                                    color={'white'}\n                                    _hover={{\n                                        bg: 'blue.500',\n                                    }}>\n                                    Register\n                                </Button>\n                            </Stack>\n                            <Stack\n                                direction={{ base: 'column', sm: 'row' }}\n                                justify={'space-between'}>\n                                <Link as={ReachLink} to=\"/login\" color={'blue.400'}>Have an Account ? Login</Link>\n                            </Stack>\n                        </Stack>\n                    </Box>\n                </Stack>\n            </Flex>\n        </>\n    );\n}\nRegister.propTypes = {\n    history: PropTypes.any,\n};","import {\n    Avatar,\n    Box, Button, Center, Heading, LinkOverlay, Stack, Text, useColorModeValue, Flex\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link as ReachLink } from \"react-router-dom\";\nimport MetaData from '../layout/MetaData';\nexport default function Profile() {\n    const { user } = useSelector(state => state.auth)\n\n    return (\n        <Flex justifyContent=\"center\">\n            <Center py={'16'}>\n                <MetaData title={'Your Profile'} />\n                <Box\n                    w={[320, 500, 600]}\n                    bg={useColorModeValue('white', 'gray.900')}\n                    boxShadow={'2xl'}\n                    rounded={'lg'}\n                    p={6}\n                    textAlign={'center'}>\n                    <Avatar\n                        size={'xl'}\n                        src={\n                            \"https://bit.ly/sage-adebayo\"\n                        }\n                        alt={'Avatar Alt'}\n                        mb={4}\n                        pos={'relative'}\n                        _after={{\n                            content: '\"\"',\n                            w: 4,\n                            h: 4,\n                            bg: 'green.300',\n                            border: '2px solid white',\n                            rounded: 'full',\n                            pos: 'absolute',\n                            bottom: 0,\n                            right: 3,\n                        }}\n                    />\n                    <Heading fontSize={'2xl'} fontFamily={'body'}>\n                        {user.username}\n                    </Heading>\n                    <Text fontWeight={600} color={'gray.500'} mb={4}>\n                        {user.email}\n                    </Text>\n                    <Text fontWeight={600} color={'gray.500'} mb={4}>\n                        {user.department}\n                    </Text>\n                    <Stack mt={8} direction={'row'} spacing={4}>\n                        <Button\n                            flex={1}\n                            fontSize={'sm'}\n                            rounded={'full'}\n                            _focus={{\n                                bg: 'gray.200',\n                            }}>\n                            <LinkOverlay _hover={{\n                                textDecoration: 'none',\n                                color: \"black\"\n                            }} as={ReachLink} to=\"/password/update\" >  Change Password\n                            </LinkOverlay>\n                        </Button>\n                        <Button\n                            hidden={user.department === \"Administrator\"}\n                            flex={1}\n                            fontSize={'sm'}\n                            rounded={'full'}\n                            bg={'blue.400'}\n                            color={'white'}\n                            boxShadow={\n                                '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                            }\n                            _hover={{\n                                bg: 'blue.500',\n                            }}\n                            _focus={{\n                                bg: 'blue.500',\n                            }}>\n\n                            <LinkOverlay _hover={{\n                                textDecoration: 'none',\n                                color: \"black\"\n                            }} as={ReachLink} to=\"/me/update\" > Edit Profile\n                            </LinkOverlay>\n                        </Button>\n                    </Stack>\n                </Box>\n            </Center>\n        </Flex >\n    )\n}","import {\n    Box, Button, Flex, FormControl,\n    FormLabel, Heading, Input, Stack, useColorModeValue, useToast\n} from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearErrors, loadUser, updateProfile } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\nimport PropTypes from 'prop-types';\n\nexport default function UpdateProfile({ history }) {\n\n    const toast = useToast()\n    const [username, setUsername] = useState('')\n\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setUsername(user.username);\n        }\n\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            toast({\n                title: 'User updated successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, error, history, isUpdated, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(updateProfile({ username }))\n    }\n\n    return (\n        <>\n            <MetaData title={'Update Profile'} />\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                <Stack spacing={8} mx={'auto'} w={[400, 500, 700]} py={12} px={6}>\n                    <Stack align={'center'}>\n                        <Heading fontSize={['2xl', '3xl', '4xl']}>Update my Profile</Heading>\n                    </Stack>\n                    <Box\n                        rounded={'lg'}\n                        bg={useColorModeValue('white', 'gray.700')}\n                        boxShadow={'lg'}\n                        p={8}>\n                        <Stack as={'form'} spacing={4} onSubmit={submitHandler}>\n                            <FormControl>\n                                <FormLabel>Username</FormLabel>\n                                <Input type=\"text\"\n                                    value={username}\n                                    onChange={(e) => setUsername(e.target.value)}\n                                />\n                            </FormControl>\n                            <Stack spacing={10}>\n                                <Button\n                                    type={\"submit\"}\n                                    bg={'blue.400'}\n                                    color={'white'}\n                                    _hover={{\n                                        bg: 'blue.500',\n                                    }}\n                                    disabled={loading ? true : false} >\n                                    Update\n                                </Button>\n                            </Stack>\n                        </Stack>\n                    </Box>\n                </Stack>\n            </Flex>\n        </>\n    );\n}\n\nUpdateProfile.propTypes = {\n    history: PropTypes.any,\n};","import {\n    Box, Button, Flex, FormControl,\n    FormLabel, Heading, Input, Stack, useColorModeValue, useToast\n} from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearErrors, updatePassword } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\nimport PropTypes from 'prop-types';\n\nexport default function UpdatePassword({ history }) {\n\n    const toast = useToast()\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            toast({\n                title: 'Password updated successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updatePassword({ oldPassword, password }))\n    }\n\n    return (\n        <>\n            <MetaData title={'Change Password'} />\n\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                <Stack spacing={8} w={[400, 500, 700]} mx={'auto'} py={12} px={6}>\n                    <Stack align={'center'}>\n                        <Heading fontSize={['2xl', '3xl', '4xl']}>Update my Password</Heading>\n                    </Stack>\n                    <Box\n                        rounded={'lg'}\n                        bg={useColorModeValue('white', 'gray.700')}\n                        boxShadow={'lg'}\n                        p={8}>\n                        <Stack as={'form'} spacing={4} onSubmit={submitHandler}>\n                            <FormControl id=\"email\">\n                                <FormLabel>Old Password</FormLabel>\n                                <Input\n                                    type=\"password\"\n                                    name=\"oldPassword\"\n                                    value={oldPassword}\n                                    onChange={(e) => setOldPassword(e.target.value)} />\n                            </FormControl>\n                            <FormControl id=\"password\">\n                                <FormLabel>Password</FormLabel>\n                                <Input type=\"password\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)} />\n                            </FormControl>\n                            <Stack spacing={10}>\n                                <Button\n                                    type={\"submit\"}\n                                    bg={'blue.400'}\n                                    color={'white'}\n                                    _hover={{\n                                        bg: 'blue.500',\n                                    }}>\n                                    Update\n                                </Button>\n                            </Stack>\n                        </Stack>\n                    </Box>\n                </Stack>\n            </Flex>\n        </>\n    );\n}\n\nUpdatePassword.propTypes = {\n    history: PropTypes.any,\n};","import { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Center, HStack, useColorMode, useToast } from \"@chakra-ui/react\";\nimport { MDBDataTable, MDBTable } from 'mdbreact';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors, deletePatient, getAdminPatients } from '../../actions/patientActions';\nimport { DELETE_PATIENT_RESET } from '../../constants/patientConstants';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\n\n\nconst PatientsList = ({ history }) => {\n    const toast = useToast()\n    const dispatch = useDispatch();\n    const { colorMode, } = useColorMode()\n    const { loading, error, patients } = useSelector(state => state.patients);\n    const { error: deleteError, isDeleted } = useSelector(state => state.patient)\n\n    useEffect(() => {\n        dispatch(getAdminPatients());\n\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            toast({\n                title: deleteError,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            toast({\n                title: 'Patient deleted successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n            history.replace('/admin/patients');\n            window.location.reload();\n            dispatch({ type: DELETE_PATIENT_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\n\n    const setPatients = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Age',\n                    field: 'age',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Sex',\n                    field: 'sex',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Contact No.',\n                    field: 'contact',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        patients.forEach(patient => {\n            data.rows.push({\n                id: patient.outPatientId,\n                name: patient.name,\n                age: patient.age,\n                sex: patient.sex,\n                contact: patient.contactNumber,\n                actions:\n                    <HStack>\n                        <Center w=\"40px\" h=\"40px\" bg=\"blue.300\" color=\"white\">\n                            <Link to={`/admin/patient/${patient.id}`} >\n                                <EditIcon />\n                            </Link>\n                        </Center>\n                        <Center w=\"40px\" h=\"40px\" bg=\"red.300\" color=\"white\" _hover={{ cursor: \"pointer\" }} onClick={() => deleteProductHandler(patient.id)}>\n                            <Box as=\"span\" fontWeight=\"bold\" fontSize=\"lg\" >\n                                <DeleteIcon />\n                            </Box>\n                        </Center>\n                    </HStack>\n            })\n        })\n\n        return data;\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deletePatient(id))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All Patients'} />\n            <div className=\"container\">\n\n                <div className=\"row\">\n\n                    <div className=\"col-12\">\n                        <Fragment>\n                            <h1 className=\"my-5\">All Patients</h1>\n\n                            {loading ? <Loader /> : (\n                                <MDBTable responsive>\n                                    <MDBDataTable\n                                        theadTextWhite={colorMode === \"dark\"}\n                                        tbodyTextWhite={colorMode === \"dark\"}\n                                        data={setPatients()}\n                                        className=\"px-3\"\n                                        bordered\n                                        striped\n                                        sorting=\"true\"\n                                    />\n                                </MDBTable>\n                            )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default PatientsList\n\nPatientsList.propTypes = {\n    history: PropTypes.any,\n};","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport MetaData from '../layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newPatient, clearErrors } from '../../actions/patientActions'\nimport { NEW_PATIENT_RESET } from '../../constants/patientConstants'\nimport {\n    Box, Button, Flex, Stack, useColorModeValue, Heading, useToast\n} from '@chakra-ui/react'\nimport { Form, Formik } from \"formik\"\nimport {\n    InputControl, NumberInputControl, SelectControl, TextareaControl\n} from \"formik-chakra-ui\"\nconst NewPatient = ({ history }) => {\n    const toast = useToast()\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.newPatient);\n\n    useEffect(() => {\n\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/patients');\n            toast({\n                title: 'Patient created successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch({ type: NEW_PATIENT_RESET })\n        }\n\n    }, [dispatch, error, success, history])\n\n    const submitHandler = (userData) => {\n        console.log(userData);\n        dispatch(newPatient(userData));\n    }\n\n    return (\n        <>\n            <MetaData title={'New Patient'} />\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                <Stack spacing={8} mx={'auto'} w={[400, 500, 800]} py={12} px={6}>\n                    <Stack align={'center'}>\n                        <Heading fontSize={['2xl', '3xl', '4xl']}>Create New Patient</Heading>\n                    </Stack>\n                    <Box\n                        rounded={'lg'}\n                        bg={useColorModeValue('white', 'gray.700')}\n                        boxShadow={'lg'}\n                        p={8}>\n                        <Stack spacing={4}>\n                            <Formik\n                                initialValues={{\n                                    outPatientId: '',\n                                    name: '',\n                                    age: '',\n                                    sex: '',\n                                    occupation: '',\n                                    contactNumber: '',\n                                    residentialAddress: '',\n                                }}\n                                onSubmit={(values) => {\n                                    submitHandler(values);\n                                }}\n                            >\n                                {() => (\n                                    <Form>\n                                        <InputControl mt={3} name=\"outPatientId\" placeholder=\"YYYY___\" label=\"OutPatient Id\" />\n                                        <InputControl mt={3} placeholder=\"John Abraham\" name=\"name\" label=\"Name\" />\n                                        <NumberInputControl mt={3} name=\"age\" label=\"Age\" />\n                                        <SelectControl mt={3}\n                                            name=\"sex\" label=\"Sex\" selectProps={{ placeholder: \"Select option\" }}\n                                        >\n                                            <option value=\"Male\">Male</option>\n                                            <option value=\"Female\">Female</option>\n                                            <option value=\"Others\">Others</option>\n                                        </SelectControl>\n                                        <InputControl mt={3} name=\"occupation\" label=\"Occupation\" />\n                                        <NumberInputControl mt={3} name=\"contactNumber\" label=\"Contact Number\" />\n                                        <TextareaControl mt={3} name=\"residentialAddress\" label=\"Residential Address\" />\n                                        <Stack spacing={10} mt={3}>\n                                            <Button\n                                                type={\"submit\"}\n                                                boxShadow={\n                                                    '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                                                }\n                                                bg={'blue.400'}\n                                                color={'white'}\n                                                _hover={{\n                                                    bg: 'blue.500',\n                                                }}>\n                                                Create Patient\n                                            </Button>\n                                        </Stack>\n                                    </Form>\n                                )}\n                            </Formik>\n                        </Stack>\n                    </Box>\n                </Stack>\n            </Flex>\n        </>\n    )\n}\n\nexport default NewPatient\n\nNewPatient.propTypes = {\n    history: PropTypes.any,\n};","import {\n    Box, Button, Flex, Stack, useColorModeValue, Heading, useToast\n} from '@chakra-ui/react'\nimport { Form, Formik } from \"formik\"\nimport {\n    InputControl, NumberInputControl, SelectControl, TextareaControl\n} from \"formik-chakra-ui\"\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\nimport { clearErrors, getPatientDetails, updatePatient } from '../../actions/patientActions'\nimport { UPDATE_PATIENT_RESET } from '../../constants/patientConstants'\nimport MetaData from '../layout/MetaData'\nUpdatePatient.propTypes = {\n    match: PropTypes.any,\n};\nexport default function UpdatePatient({ match }) {\n    const toast = useToast()\n    const history = useHistory()\n    const dispatch = useDispatch();\n\n    const [loadedValues, setLoadedValues] = useState(null)\n    const { error, patient } = useSelector(state => state.patientDetails)\n    const patientSelector = useSelector(state => state.patient);\n\n    const patientId = match.params.id;\n\n\n    useEffect(() => {\n        if (patient && patient.id !== patientId) {\n            dispatch(getPatientDetails(patientId));\n        } else {\n            setLoadedValues({\n                outPatientId: patient.outPatientId,\n                name: patient.name,\n                age: patient.age,\n                sex: patient.sex,\n                occupation: patient.occupation,\n                contactNumber: patient.contactNumber,\n                residentialAddress: patient.residentialAddress\n            })\n        }\n        if (patientSelector.error || error) {\n            toast({\n                title: patientSelector.error || error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors())\n        }\n        if (patientSelector.updateError) {\n            toast({\n                title: patientSelector.updateError,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors())\n        }\n        if (patientSelector.isUpdated) {\n            history.replace(\"/admin/patients\")\n            window.location.reload();\n            toast({\n                title: 'Patient updated successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch({ type: UPDATE_PATIENT_RESET })\n        }\n    }, [dispatch, alert, error, patientSelector.isUpdated, history, patientSelector.updateError, patientSelector.error, patient, patientId])\n\n    const submitHandler = (patientData) => {\n        dispatch(updatePatient(patient.id, patientData));\n    }\n    return (\n        <>\n            {\n                loadedValues &&\n                <>\n                    <MetaData title={'Update Patient'} />\n                    <Flex\n                        minH={'100vh'}\n                        align={'center'}\n                        justify={'center'}\n                        bg={useColorModeValue('gray.50', 'gray.800')}>\n                        <Stack spacing={8} mx={'auto'} w={[400, 500, 800]} py={12} px={6}>\n                            <Stack align={'center'}>\n                                <Heading fontSize={['2xl', '3xl', '4xl']}>Update Patient</Heading>\n                            </Stack>\n                            <Box\n                                rounded={'lg'}\n                                bg={useColorModeValue('white', 'gray.700')}\n                                boxShadow={'lg'}\n                                p={8}>\n                                <Stack spacing={4}>\n                                    <Formik\n                                        initialValues={loadedValues || {\n                                            outPatientId: '',\n                                            name: '',\n                                            age: '',\n                                            sex: '',\n                                            occupation: '',\n                                            contactNumber: '',\n                                            residentialAddress: '',\n                                        }}\n                                        onSubmit={(values) => {\n                                            submitHandler(values);\n                                        }}\n                                    >\n                                        {() => (\n                                            <Form>\n                                                <InputControl mt={3} isReadOnly name=\"outPatientId\" label=\"OutPatient Id\" />\n                                                <InputControl mt={3} name=\"name\" label=\"Name\" />\n                                                <NumberInputControl mt={3} name=\"age\" label=\"Age\" />\n                                                <SelectControl\n                                                    name=\"sex\" mt={3} label=\"Sex\"\n                                                >\n                                                    <option value=\"Male\">Male</option>\n                                                    <option value=\"Female\">Female</option>\n                                                    <option value=\"Others\">Others</option>\n                                                </SelectControl>\n                                                <InputControl mt={3} name=\"occupation\" label=\"Occupation\" />\n                                                <NumberInputControl mt={3} name=\"contactNumber\" label=\"Contact Number\" />\n                                                <TextareaControl mt={3} name=\"residentialAddress\" label=\"Residential Address\" />\n                                                <Stack spacing={10} mt={3}>\n                                                    <Button\n                                                        type={\"submit\"}\n                                                        boxShadow={\n                                                            '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                                                        }\n                                                        bg={'blue.400'}\n                                                        color={'white'}\n                                                        _hover={{\n                                                            bg: 'blue.500',\n                                                        }}>\n                                                        Update Patient\n                                                    </Button>\n                                                </Stack>\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </Stack>\n                            </Box>\n                        </Stack>\n                    </Flex>\n                </>\n            }\n        </>\n    );\n}","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable, MDBTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\nimport { useColorMode } from \"@chakra-ui/react\"\nimport { HStack, Center, Box, useToast } from \"@chakra-ui/react\"\nimport { EditIcon, DeleteIcon } from \"@chakra-ui/icons\"\nimport PropTypes from 'prop-types';\n\nconst UsersList = ({ history }) => {\n    const toast = useToast()\n    const { colorMode, } = useColorMode()\n    const dispatch = useDispatch();\n\n    let { loading, users } = useSelector(state => state.allUsers);\n    let { isDeleted, error } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            toast({\n                title: 'User deleted successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Department',\n                    field: 'department',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(user => {\n            data.rows.push({\n                name: user.username,\n                email: user.email,\n                role: user.role,\n                department: user.department,\n                actions:\n                    <HStack hidden={user.department === \"Administrator\"}>\n                        <Center w=\"40px\" h=\"40px\" bg=\"blue.300\" color=\"white\">\n                            <Link to={`/admin/user/${user.id}`}>\n                                <EditIcon />\n                            </Link>\n                        </Center>\n                        <Center w=\"40px\" h=\"40px\" bg=\"red.300\" color=\"white\">\n                            <Box as=\"button\" fontWeight=\"bold\" fontSize=\"lg\" onClick={() => deleteUserHandler(user.id)}>\n                                <DeleteIcon />\n                            </Box>\n                        </Center>\n                    </HStack>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"offset-md-1 col-12 col-md-10\">\n                        <Fragment>\n                            <h1 className=\"my-5\">All Users</h1>\n\n                            {loading ? <Loader /> : (\n                                <MDBTable responsive>\n\n                                    <MDBDataTable\n                                        theadTextWhite={colorMode === \"dark\"}\n                                        tbodyTextWhite={colorMode === \"dark\"}\n                                        data={setUsers()}\n                                        className=\"px-3\"\n                                        bordered\n                                        striped\n                                    />\n                                </MDBTable>\n                            )}\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n\nUsersList.propTypes = {\n    history: PropTypes.any,\n};","import {\n    Box, Button, Flex, Heading, Stack, useColorModeValue, useToast\n} from '@chakra-ui/react'\nimport { Form, Formik } from \"formik\"\nimport {\n    InputControl,\n    SelectControl\n} from \"formik-chakra-ui\"\nimport PropTypes from 'prop-types'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearErrors, getUserDetails, updateUser } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\n\nconst UpdateUser = ({ history, match }) => {\n    const toast = useToast()\n    const [loadedValues, setLoadedValues] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id;\n\n    useEffect(() => {\n        if (user && user.id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setLoadedValues({\n                username: user.username,\n                email: user.email,\n                role: user.role,\n                department: user.department\n            })\n        }\n\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            })\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            toast({\n                title: 'User updated successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n\n            history.push('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, error, history, isUpdated, userId, user])\n\n    const submitHandler = (userData) => {\n        dispatch(updateUser(user.id, userData))\n    }\n\n    return (\n        <Fragment>\n            {\n                loadedValues && <>\n                    <MetaData title={`Update User`} />\n                    <Flex\n                        minH={'100vh'}\n                        align={'center'}\n                        justify={'center'}\n                        bg={useColorModeValue('gray.50', 'gray.800')}>\n                        <Stack spacing={8} mx={'auto'} w={[400, 500, 800]} py={12} px={6}>\n                            <Stack align={'center'}>\n                                <Heading fontSize={['2xl', '3xl', '4xl']}>Update User</Heading>\n                            </Stack>\n                            <Box\n                                rounded={'lg'}\n                                bg={useColorModeValue('white', 'gray.700')}\n                                boxShadow={'lg'}\n                                p={8}>\n                                <Stack spacing={4}>\n                                    <Formik\n                                        initialValues={loadedValues}\n                                        onSubmit={(values) => {\n                                            submitHandler(values);\n                                        }}\n                                    >\n                                        {({ isSubmitting }) => (\n                                            <Form>\n                                                <InputControl mt={3} name=\"username\" label=\"Username\" />\n                                                <InputControl mt={3} name=\"email\" label=\"Email\" />\n                                                <SelectControl mt={3} isReadOnly={user.department === 'Administrator'}\n                                                    name=\"role\" label=\"Role\"\n                                                >\n                                                    <option value=\"Authorized\">Authorized</option>\n                                                    <option value=\"Unauthorized\">Unauthorized</option>\n                                                </SelectControl>\n                                                <SelectControl mt={3} isReadOnly={user.department === 'Administrator'}\n                                                    name=\"department\" label=\"Department\"\n                                                >\n                                                    <option value=\"D1\">D1</option>\n                                                    <option value=\"D2\">D2</option>\n                                                    <option value=\"D3\">D3</option>\n                                                    <option value=\"D4\">D4</option>\n                                                    <option value=\"D5\">D5</option>\n                                                    <option value=\"D6\">D6</option>\n                                                    <option value=\"D7\">D7</option>\n                                                    <option value=\"D8\">D8</option>\n                                                    <option value=\"D9\">D9</option>\n                                                </SelectControl>\n                                                <Stack spacing={10} mt={3}>\n                                                    <Button\n                                                        disabled={user.department === 'Administrator' || isSubmitting}\n                                                        type={\"submit\"}\n                                                        boxShadow={\n                                                            '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                                                        }\n                                                        bg={'blue.400'}\n                                                        color={'white'}\n                                                        _hover={{\n                                                            bg: 'blue.500',\n                                                        }}>\n                                                        Update Profile\n                                                    </Button>\n                                                </Stack>\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                </Stack>\n                            </Box>\n                        </Stack>\n                    </Flex>\n                </>\n            }\n        </Fragment >\n    )\n}\n\nexport default UpdateUser\n\nUpdateUser.propTypes = {\n    history: PropTypes.any,\n    match: PropTypes.any,\n};","import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types';\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                        if (isAdmin === true && user.department !== 'Administrator') {\n                            return <Redirect to=\"/\" />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n\nProtectedRoute.propTypes = {\n    isAdmin: PropTypes.any,\n    component: PropTypes.any,\n};","export const UPDATE_DEPT_DATA_REQUEST = 'UPDATE_DEPT_DATA_REQUEST'\nexport const UPDATE_DEPT_DATA_SUCCESS = 'UPDATE_DEPT_DATA_SUCCESS'\nexport const UPDATE_DEPT_DATA_FAIL = 'UPDATE_DEPT_DATA_FAIL'\n\nexport const UPDATE_DEPT_DATA_RESET = 'UPDATE_DEPT_DATA_RESET'\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'\n\nimport { patientsReducer, newPatientReducer, patientReducer, patientDetailsReducer } from './reducers/patientReducers'\nimport { authReducer, userReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\nimport { departmentReducer } from './reducers/departmentReducers'\n\nconst reducer = combineReducers({\n    patients: patientsReducer,\n    patientDetails: patientDetailsReducer,\n    newPatient: newPatientReducer,\n    patient: patientReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    department: departmentReducer,\n});\n\nlet initialState = {};\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\n\nexport default store;","import {\n    PATIENT_REQUEST,\n    PATIENT_SUCCESS,\n    PATIENT_FAIL,\n    ADMIN_PATIENTS_REQUEST,\n    ADMIN_PATIENTS_SUCCESS,\n    ADMIN_PATIENTS_FAIL,\n    NEW_PATIENT_REQUEST,\n    NEW_PATIENT_SUCCESS,\n    NEW_PATIENT_RESET,\n    NEW_PATIENT_FAIL,\n    DELETE_PATIENT_REQUEST,\n    DELETE_PATIENT_SUCCESS,\n    DELETE_PATIENT_RESET,\n    DELETE_PATIENT_FAIL,\n    UPDATE_PATIENT_REQUEST,\n    UPDATE_PATIENT_SUCCESS,\n    UPDATE_PATIENT_RESET,\n    UPDATE_PATIENT_FAIL,\n    PATIENT_DETAILS_REQUEST,\n    PATIENT_DETAILS_SUCCESS,\n    PATIENT_DETAILS_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/patientConstants'\n\nexport const patientsReducer = (state = { patients: [] }, action) => {\n    switch (action.type) {\n        case ADMIN_PATIENTS_REQUEST:\n            return {\n                loading: true,\n                patients: []\n            }\n\n\n        case ADMIN_PATIENTS_SUCCESS:\n            return {\n                loading: false,\n                patients: action.payload\n            }\n\n        case ADMIN_PATIENTS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const newPatientReducer = (state = { patient: {} }, action) => {\n    switch (action.type) {\n\n        case NEW_PATIENT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case NEW_PATIENT_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                patient: action.payload\n            }\n\n\n        case NEW_PATIENT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_PATIENT_RESET:\n            return {\n                ...state,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const patientReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case PATIENT_REQUEST:\n            return {\n                loading: true,\n                patient: {}\n            }\n\n        case PATIENT_SUCCESS:\n            return {\n                loading: false,\n                patient: action.payload,\n            }\n        case DELETE_PATIENT_REQUEST:\n        case UPDATE_PATIENT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case DELETE_PATIENT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PATIENT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n        case PATIENT_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case DELETE_PATIENT_FAIL:\n        case UPDATE_PATIENT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case DELETE_PATIENT_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PATIENT_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const patientDetailsReducer = (state = { patient: {} }, action) => {\n    switch (action.type) {\n\n        case PATIENT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case PATIENT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                patient: action.payload\n            }\n\n        case PATIENT_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case REGISTER_USER_SUCCESS:\n        case LOGIN_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_USER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case ALL_USERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","import {\n    UPDATE_DEPT_DATA_REQUEST,\n    UPDATE_DEPT_DATA_SUCCESS,\n    UPDATE_DEPT_DATA_FAIL,\n    UPDATE_DEPT_DATA_RESET,\n    CLEAR_ERRORS\n} from '../constants/departmentConstants';\n\nexport const departmentReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_DEPT_DATA_REQUEST:\n            return {\n                loading: true,\n                success: false\n            }\n\n        case UPDATE_DEPT_DATA_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case UPDATE_DEPT_DATA_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case UPDATE_DEPT_DATA_RESET:\n            return {\n                loading: false,\n                success: false\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n","import axios from 'axios';\n\nimport {\n    UPDATE_DEPT_DATA_REQUEST,\n    UPDATE_DEPT_DATA_SUCCESS,\n    UPDATE_DEPT_DATA_FAIL,\n    CLEAR_ERRORS\n} from '../constants/departmentConstants';\n\nimport { getConfig } from \"../utils/getConfig\"\nimport { handleHTTPerrors } from \"../utils/handleHTTPerrors\"\n\nexport const updatePatientDataInDepartment = (department, patientId, patientData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_DEPT_DATA_REQUEST })\n        const { data } = await axios.post(`/api/${department}/${patientId.toString()}`, patientData, getConfig());\n\n        dispatch({\n            type: UPDATE_DEPT_DATA_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        const err = handleHTTPerrors(error)\n        dispatch({\n            type: UPDATE_DEPT_DATA_FAIL,\n            payload: err\n        })\n    }\n}\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","import {\n    Box, Button, Flex, FormLabel, Heading, SimpleGrid, Stack, Text, useColorModeValue, useToast\n} from '@chakra-ui/react'\nimport { Form, Formik } from \"formik\"\nimport {\n    CheckboxSingleControl, InputControl,\n    TextareaControl\n} from \"formik-chakra-ui\"\nimport PropTypes from 'prop-types'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearErrors, updatePatientDataInDepartment } from '../../actions/departmentActions'\nimport { UPDATE_DEPT_DATA_RESET } from '../../constants/departmentConstants'\nimport Loader from \"../layout/Loader\"\nimport MetaData from '../layout/MetaData';\n\nconst D1 = ({ history, match }) => {\n    const toast = useToast();\n    const { user } = useSelector(state => state.auth);\n\n    const initialValues = {\n        chiefComplaint: \"\",\n        historyOfPresentingIllness: \"\",\n        medicalHistory: \"\",\n        surgicalHistory: \"\",\n        dentalHistory: \"\",\n        personalHistory: \"\",\n        diet: \"\",\n        personalHabits: \"\",\n        familyHistory: \"\",\n        maritalHistory: \"\",\n        stature: \"\",\n        appearance: \"\",\n        built: \"\",\n        nourishment: \"\",\n        structuralAlterationsDeformities: \"\",\n        hair: \"\",\n        skin: \"\",\n        pallor: \"\",\n        icterus: \"\",\n        pedalEdema: \"\",\n        cyanosis: \"\",\n        bP: \"\",\n        respiratoryRate: \"\",\n        pulseRate: \"\",\n        temperature: \"\",\n        cvs: \"\",\n        rs: \"\",\n        git: \"\",\n        cnd: \"\",\n        urogenitalSystem: \"\",\n        facialSymmetry: \"\",\n        earNoseEye: \"\",\n        tmj: \"\",\n        lips: \"\",\n        maxillarySinusTenderness: \"\",\n        lymphNodes: \"\",\n        intraOralExamination: \"\",\n        openingOfTheMouth: \"\",\n        interincisalDistance: \"\",\n        jawDeviation: \"\",\n        teethNumber: \"\",\n        teethSize: \"\",\n        teethShape: \"\",\n        teethColour: \"\",\n        teethMissingTooth: \"\",\n        teethRestoredTooth: \"\",\n        teethStains: \"\",\n        teethCaries: \"\",\n        teethAttrition: \"\",\n        teethAbrasion: \"\",\n        teethErosion: \"\",\n        teethMobility: \"\",\n        teethRootStumps: \"\",\n        teethFracture: \"\",\n        teethRetainedDeciduous: \"\",\n        teethPartiallyErupted: \"\",\n        teethDevelopmentalAnomalies: \"\",\n        gingivaColour: \"\",\n        gingivaContour: \"\",\n        gingivaConsistency: \"\",\n        gingivaCalculus: \"\",\n        gingivalRecession: \"\",\n        gingivaPeriodontalPocket: \"\",\n        alveolarMucosa: \"\",\n        buccalMucosaColour: \"\",\n        buccalMucosaConsistency: \"\",\n        buccalMucosaOpeningOfStensonSDuct: \"\",\n        labialMucosa: \"\",\n        palateHardPalate: \"\",\n        palateSoftPalate: \"\",\n        tongueSize: \"\",\n        tongueMovement: \"\",\n        tongueAttachment: \"\",\n        tongueDorsalSurface: \"\",\n        tongueVentralSurface: \"\",\n        tongueEdge: \"\",\n        tongueLateralSurface: \"\",\n        tonsils: \"\",\n        floorOfTheMouth: \"\",\n        pillarsOfTheFauces: \"\",\n        inspection: \"\",\n        palpation: \"\",\n        summary: \"\",\n        provisionalDiagonosis: \"\",\n        investigations: \"\",\n        finalDiagonosis: \"\",\n        treatmentPlan: \"\",\n        referalToDepartments: \"\",\n    };\n\n    const [loadedValues, setLoadedValues] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const { patient } = useSelector(state => state.patient);\n    const { loading, success, error } = useSelector(state => state.department);\n\n    const patientId = match.params.patientId;\n    useEffect(() => {\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            });\n            dispatch(clearErrors());\n        }\n        if (success) {\n            toast({\n                title: 'Patient Updated successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n            history.push(\"/\");\n            dispatch({ type: UPDATE_DEPT_DATA_RESET })\n        }\n        if (patient && patient.patientDOneData !== null && patient.id.toString() === patientId.toString()) {\n            setLoadedValues({\n                id: patient.patientDOneData.id,\n                chiefComplaint: patient.patientDOneData.chiefComplaint,\n                historyOfPresentingIllness: patient.patientDOneData.historyOfPresentingIllness,\n                medicalHistory: patient.patientDOneData.medicalHistory,\n                surgicalHistory: patient.patientDOneData.surgicalHistory,\n                dentalHistory: patient.patientDOneData.dentalHistory,\n                personalHistory: patient.patientDOneData.personalHistory,\n                diet: patient.patientDOneData.diet,\n                personalHabits: patient.patientDOneData.personalHabits,\n                familyHistory: patient.patientDOneData.familyHistory,\n                maritalHistory: patient.patientDOneData.maritalHistory,\n                stature: patient.patientDOneData.stature,\n                appearance: patient.patientDOneData.appearance,\n                built: patient.patientDOneData.built,\n                nourishment: patient.patientDOneData.nourishment,\n                structuralAlterationsDeformities: patient.patientDOneData.structuralAlterationsDeformities,\n                hair: patient.patientDOneData.hair,\n                skin: patient.patientDOneData.skin,\n                pallor: patient.patientDOneData.pallor,\n                icterus: patient.patientDOneData.icterus,\n                pedalEdema: patient.patientDOneData.pedalEdema,\n                cyanosis: patient.patientDOneData.cyanosis,\n                bP: patient.patientDOneData.bP,\n                respiratoryRate: patient.patientDOneData.respiratoryRate,\n                pulseRate: patient.patientDOneData.pulseRate,\n                temperature: patient.patientDOneData.temperature,\n                cvs: patient.patientDOneData.cvs,\n                rs: patient.patientDOneData.rs,\n                git: patient.patientDOneData.git,\n                cnd: patient.patientDOneData.cnd,\n                urogenitalSystem: patient.patientDOneData.urogenitalSystem,\n                facialSymmetry: patient.patientDOneData.facialSymmetry,\n                earNoseEye: patient.patientDOneData.earNoseEye,\n                tmj: patient.patientDOneData.tmj,\n                lips: patient.patientDOneData.lips,\n                maxillarySinusTenderness: patient.patientDOneData.maxillarySinusTenderness,\n                lymphNodes: patient.patientDOneData.lymphNodes,\n                intraOralExamination: patient.patientDOneData.intraOralExamination,\n                openingOfTheMouth: patient.patientDOneData.openingOfTheMouth,\n                interincisalDistance: patient.patientDOneData.interincisalDistance,\n                jawDeviation: patient.patientDOneData.jawDeviation,\n                teethNumber: patient.patientDOneData.teethNumber,\n                teethSize: patient.patientDOneData.teethSize,\n                teethShape: patient.patientDOneData.teethShape,\n                teethColour: patient.patientDOneData.teethColour,\n                teethMissingTooth: patient.patientDOneData.teethMissingTooth,\n                teethRestoredTooth: patient.patientDOneData.teethRestoredTooth,\n                teethStains: patient.patientDOneData.teethStains,\n                teethCaries: patient.patientDOneData.teethCaries,\n                teethAttrition: patient.patientDOneData.teethAttrition,\n                teethAbrasion: patient.patientDOneData.teethAbrasion,\n                teethErosion: patient.patientDOneData.teethErosion,\n                teethMobility: patient.patientDOneData.teethMobility,\n                teethRootStumps: patient.patientDOneData.teethRootStumps,\n                teethFracture: patient.patientDOneData.teethFracture,\n                teethRetainedDeciduous: patient.patientDOneData.teethRetainedDeciduous,\n                teethPartiallyErupted: patient.patientDOneData.teethPartiallyErupted,\n                teethDevelopmentalAnomalies: patient.patientDOneData.teethDevelopmentalAnomalies,\n                gingivaColour: patient.patientDOneData.gingivaColour,\n                gingivaContour: patient.patientDOneData.gingivaContour,\n                gingivaConsistency: patient.patientDOneData.gingivaConsistency,\n                gingivaCalculus: patient.patientDOneData.gingivaCalculus,\n                gingivalRecession: patient.patientDOneData.gingivalRecession,\n                gingivaPeriodontalPocket: patient.patientDOneData.gingivaPeriodontalPocket,\n                alveolarMucosa: patient.patientDOneData.alveolarMucosa,\n                buccalMucosaColour: patient.patientDOneData.buccalMucosaColour,\n                buccalMucosaConsistency: patient.patientDOneData.buccalMucosaConsistency,\n                buccalMucosaOpeningOfStensonSDuct: patient.patientDOneData.buccalMucosaOpeningOfStensonSDuct,\n                labialMucosa: patient.patientDOneData.labialMucosa,\n                palateHardPalate: patient.patientDOneData.palateHardPalate,\n                palateSoftPalate: patient.patientDOneData.palateSoftPalate,\n                tongueSize: patient.patientDOneData.tongueSize,\n                tongueMovement: patient.patientDOneData.tongueMovement,\n                tongueAttachment: patient.patientDOneData.tongueAttachment,\n                tongueDorsalSurface: patient.patientDOneData.tongueDorsalSurface,\n                tongueVentralSurface: patient.patientDOneData.tongueVentralSurface,\n                tongueEdge: patient.patientDOneData.tongueEdge,\n                tongueLateralSurface: patient.patientDOneData.tongueLateralSurface,\n                tonsils: patient.patientDOneData.tonsils,\n                floorOfTheMouth: patient.patientDOneData.floorOfTheMouth,\n                pillarsOfTheFauces: patient.patientDOneData.pillarsOfTheFauces,\n                inspection: patient.patientDOneData.inspection,\n                palpation: patient.patientDOneData.palpation,\n                summary: patient.patientDOneData.summary,\n                provisionalDiagonosis: patient.patientDOneData.provisionalDiagonosis,\n                investigations: patient.patientDOneData.investigations,\n                finalDiagonosis: patient.patientDOneData.finalDiagonosis,\n                treatmentPlan: patient.patientDOneData.treatmentPlan,\n                referalToDepartments: patient.patientDOneData.referalToDepartments,\n            });\n        }\n        if (!patient) {\n            history.push('/');\n        }\n\n\n    }, [dispatch, history, success])\n\n    const submitHandler = (patientData) => {\n        dispatch(updatePatientDataInDepartment(user.department, patientId, patientData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={`Update D1 data`} />\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                {\n                    patient && <Stack spacing={[4, 8]} mx={'auto'} w={[400, 500, 800]} py={[6, 12]} px={[1, 6]}>\n                        <Stack align={'center'}>\n                            <Heading fontSize={['2xl', '3xl', '4xl']}>Update D1 Data</Heading>\n                        </Stack>\n                        <Box\n                            rounded={'lg'}\n                            bg={useColorModeValue('white', 'gray.700')}\n                            boxShadow={'lg'}\n                            p={8}>\n                            <SimpleGrid minChildWidth=\"150px\" spacing=\"30px\" alignItems=\"center\">\n                                <Box>\n                                    OP Id <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.outPatientId}</Text>\n                                </Box>\n                                <Box>\n                                    Name <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.name}</Text>\n                                </Box>\n                                <Box>\n                                    Age <Text fontSize=\"lg\" fontWeight=\"bold\"> {patient.age}</Text>\n                                </Box>\n                                <Box>\n                                    Contact No. <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.contactNumber}</Text>\n                                </Box>\n                                <Box>\n                                    Occupation <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.occupation}</Text>\n                                </Box>\n\n                            </SimpleGrid>\n                            <Box mt={3} mb={3}>\n                                Residential Address<Text fontSize=\"md\" fontWeight=\"bold\"> {patient.residentialAddress}</Text>\n                            </Box>\n                            <Stack spacing={4}>\n                                <Formik\n                                    enableReinitialize\n                                    initialValues={loadedValues || initialValues}\n                                    onSubmit={(values) => {\n                                        submitHandler(values);\n                                    }}\n                                >\n                                    {({ isSubmitting }) => (\n                                        <Form>\n                                            <InputControl hidden name=\"id\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"chiefComplaint\" label=\"Chief Complaint\" />\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"historyOfPresentingIllness\" label=\"History of presenting illness\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"medicalHistory\" label=\"Medical History\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"surgicalHistory\" label=\"Surgical History\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"dentalHistory\" label=\"Dental History\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"personalHistory\" label=\"Personal History\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"diet\" label=\"Diet\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"personalHabits\" label=\"Personal Habits\" />\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"familyHistory\" label=\"Family History\" />\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"maritalHistory\" label=\"Marital History\" />\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>General Examination</FormLabel>\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"stature\" label=\"Stature\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"appearance\" label=\"Appearance\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"built\" label=\"Built\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"nourishment\" label=\"Nourishment\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"structuralAlterationsDeformities\" label=\"Structural Alterations, Deformities\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"hair\" label=\"Hair\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"skin\" label=\"Skin\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"pallor\" label=\"Pallor\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"icterus\" label=\"Icterus\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"pedalEdema\" label=\"Pedal Edema\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"cyanosis\" label=\"Cyanosis\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Vital Signs</FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"bP\" label=\"B.P.\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"respiratoryRate\" label=\"Respiratory rate\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"pulseRate\" label=\"Pulse rate\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"temperature\" label=\"Temperature\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Systematic Examination </FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"cvs\" label=\"CVS\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"rs\" label=\"RS\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"git\" label=\"GIT\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"cnd\" label=\"CND\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"urogenitalSystem\" label=\"Urogenital System\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Local Examination </FormLabel>\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}> Extra Oral Examination </FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"facialSymmetry\" label=\"Facial symmetry\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"earNoseEye\" label=\"Ear, Nose, Eye\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tmj\" label=\"TMJ\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"lips\" label=\"Lips\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"maxillarySinusTenderness\" label=\"Maxillary sinus tenderness\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"lymphNodes\" label=\"Lymph Nodes\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}> Intra  Oral Examination </FormLabel>\n\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"intraOralExamination\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Hard tissue Examination</FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"openingOfTheMouth\" label=\"Opening of the mouth\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"interincisalDistance\" label=\"Interincisal distance\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"jawDeviation\" label=\"Jaw Deviation\" />\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}> Teeth</FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethNumber\" label=\"Number\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethSize\" label=\"Size\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethShape\" label=\"Shape\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethColour\" label=\"Colour\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethMissingTooth\" label=\"Missing Tooth\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethRestoredTooth\" label=\"Restored Tooth\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethStains\" label=\"Stains\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethCaries\" label=\"Caries\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethAttrition\" label=\"Attrition\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethAbrasion\" label=\"Abrasion\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethErosion\" label=\"Erosion\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethMobility\" label=\"Mobility\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethRootStumps\" label=\"Root stumps\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethFracture\" label=\"Fracture\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethRetainedDeciduous\" label=\"Retained deciduous\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethPartiallyErupted\" label=\"Partially erupted\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"teethDevelopmentalAnomalies\" label=\"Developmental Anomalies\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>  Soft tissue Examination</FormLabel>\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Gingiva</FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"gingivaColour\" label=\"Colour\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"gingivaContour\" label=\"Contour\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"gingivaConsistency\" label=\"Consistency\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"gingivaCalculus\" label=\"Calculus\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"gingivalRecession\" label=\"Gingival recession\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"gingivaPeriodontalPocket\" label=\"Periodontal Pocket\" />\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Alveolar Mucosa</FormLabel>\n\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"alveolarMucosa\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Buccal Mucosa</FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"buccalMucosaColour\" label=\"Colour\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"buccalMucosaConsistency\" label=\"Consistency\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"buccalMucosaOpeningOfStensonSDuct\" label=\"Opening of Stenson’s duct\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Labial Mucosa</FormLabel>\n\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"labialMucosa\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Palate </FormLabel>\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"palateHardPalate\" label=\"Hard Palate\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"palateSoftPalate\" label=\"Soft Palate\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Tongue </FormLabel>\n\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueSize\" label=\"Size\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueMovement\" label=\"Movement\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueAttachment\" label=\"Attachment\" />\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueDorsalSurface\" label=\"Dorsal Surface\" />\n\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueVentralSurface\" label=\"Ventral Surface\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueEdge\" label=\"Edge\" />\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tongueLateralSurface\" label=\"Lateral Surface\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Tonsils </FormLabel>\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"tonsils\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Floor of the mouth </FormLabel>\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"floorOfTheMouth\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Pillars of the fauces </FormLabel>\n                                            <InputControl isReadOnly={user.department !== 'D1'} mt={3} name=\"pillarsOfTheFauces\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Examination of the lesion</FormLabel>\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Inspection  </FormLabel>\n\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"inspection\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Palpation  </FormLabel>\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"palpation\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.200\"} m={5} textAlign={\"center\"}>Summary  </FormLabel>\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"summary\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Provisional Diagonosis  </FormLabel>\n\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"provisionalDiagonosis\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Investigations  </FormLabel>\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"investigations\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Final Diagonosis  </FormLabel>\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"finalDiagonosis\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Treatment Plan  </FormLabel>\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"treatmentPlan\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Referal to Departments  </FormLabel>\n\n                                            <TextareaControl isReadOnly={user.department !== 'D1'} mt={3} name=\"referalToDepartments\" />\n\n                                            <CheckboxSingleControl name=\"referToD1\">\n                                                D1\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD2\">\n                                                D2\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD3\">\n                                                D3\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD4\">\n                                                D4\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD5\">\n                                                D5\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD6\">\n                                                D6\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD7\">\n                                                D7\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD8\">\n                                                D8\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl name=\"referToD9\">\n                                                D9\n                                            </CheckboxSingleControl>\n\n                                            <Stack spacing={10} mt={3}>\n                                                <Button\n                                                    hidden={user.department !== 'D1'}\n                                                    disabled={isSubmitting}\n                                                    type={\"submit\"}\n                                                    boxShadow={\n                                                        '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                                                    }\n                                                    bg={'blue.400'}\n                                                    color={'white'}\n                                                    _hover={{\n                                                        bg: 'blue.500',\n                                                    }}>\n                                                    Update\n                                                </Button>\n                                            </Stack>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </Stack>\n                        </Box>\n                    </Stack>\n                }\n            </Flex>\n            {loading && <Loader />}\n        </Fragment >\n    )\n}\n\nexport default D1\n\nD1.propTypes = {\n    history: PropTypes.any,\n    match: PropTypes.any,\n};","import {\n    Box, Button, Flex, FormLabel, Heading, Stack, useColorModeValue, useToast, Text, SimpleGrid\n} from '@chakra-ui/react'\nimport { Form, Formik } from \"formik\"\nimport {\n    InputControl,\n    TextareaControl,\n    CheckboxSingleControl\n} from \"formik-chakra-ui\"\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MetaData from '../layout/MetaData'\nimport Loader from \"../layout/Loader\";\nimport PropTypes from 'prop-types';\n\nimport { clearErrors, updatePatientDataInDepartment } from '../../actions/departmentActions'\nimport { UPDATE_DEPT_DATA_RESET } from '../../constants/departmentConstants'\n\nconst D2 = ({ history, match }) => {\n    const toast = useToast();\n    const { user } = useSelector(state => state.auth);\n\n    const initialValues = {\n        chiefComplaint: \"\",\n        medicalHistorydiabetes: false,\n        medicalHistoryhypertension: false,\n        medicalHistorycardiacDisorder: false,\n        medicalHistoryrheumaticFever: false,\n        medicalHistoryepilepsy: false,\n        medicalHistorybleedingDisorders: false,\n        medicalHistoryjaundice: false,\n        medicalHistoryhepatitis: false,\n        medicalHistoryasthma: false,\n        medicalHistorytyphoid: false,\n        medicalHistorydrugAllergy: false,\n        medicalHistoryallergicToLAInjections: false,\n        medicalHistoryanaemia: false,\n        medicalHistorypregnancy: false,\n        medicalHistorymenstrualCycle: false,\n        medicalHistoryothers: false,\n        familyHistorydiabetes: false,\n        familyHistorybloodDyscrasias: false,\n        familyHistoryhypertension: false,\n        familyHistoryconsanguineousMarriage: false,\n        familyHistoryothers: false,\n        clinicalFindings: \"\",\n        diagnosis: \"\",\n        prognosis: \"\",\n        investigations: \"\",\n        radiographs: \"\",\n        treatmentPlan: \"\",\n        treatmentDone: \"\",\n    };\n\n    const [loadedValues, setLoadedValues] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const { patient } = useSelector(state => state.patient);\n    const { loading, success, error } = useSelector(state => state.department);\n\n    const patientId = match.params.patientId;\n    useEffect(() => {\n        if (error) {\n            toast({\n                title: error,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true,\n            });\n            dispatch(clearErrors());\n        }\n        if (success) {\n            toast({\n                title: 'Patient Updated successfully',\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            });\n            history.push(\"/\");\n            dispatch({ type: UPDATE_DEPT_DATA_RESET })\n        }\n        if (patient && patient.patientDTwoData !== null && patient.id.toString() === patientId.toString()) {\n            setLoadedValues({\n                id: patient.patientDTwoData.id || null,\n                chiefComplaint: patient.patientDTwoData.chiefComplaint,\n                medicalHistorydiabetes: patient.patientDTwoData.medicalHistorydiabetes,\n                medicalHistoryhypertension: patient.patientDTwoData.medicalHistoryhypertension,\n                medicalHistorycardiacDisorder: patient.patientDTwoData.medicalHistorycardiacDisorder,\n                medicalHistoryrheumaticFever: patient.patientDTwoData.medicalHistoryrheumaticFever,\n                medicalHistoryepilepsy: patient.patientDTwoData.medicalHistoryepilepsy,\n                medicalHistorybleedingDisorders: patient.patientDTwoData.medicalHistorybleedingDisorders,\n                medicalHistoryjaundice: patient.patientDTwoData.medicalHistoryjaundice,\n                medicalHistoryhepatitis: patient.patientDTwoData.medicalHistoryhepatitis,\n                medicalHistoryasthma: patient.patientDTwoData.medicalHistoryasthma,\n                medicalHistorytyphoid: patient.patientDTwoData.medicalHistorytyphoid,\n                medicalHistorydrugAllergy: patient.patientDTwoData.medicalHistorydrugAllergy,\n                medicalHistoryallergicToLAInjections: patient.patientDTwoData.medicalHistoryallergicToLAInjections,\n                medicalHistoryanaemia: patient.patientDTwoData.medicalHistoryanaemia,\n                medicalHistorypregnancy: patient.patientDTwoData.medicalHistorypregnancy,\n                medicalHistorymenstrualCycle: patient.patientDTwoData.medicalHistorymenstrualCycle,\n                medicalHistoryothers: patient.patientDTwoData.medicalHistoryothers,\n                familyHistorydiabetes: patient.patientDTwoData.familyHistorydiabetes,\n                familyHistorybloodDyscrasias: patient.patientDTwoData.familyHistorybloodDyscrasias,\n                familyHistoryhypertension: patient.patientDTwoData.familyHistoryhypertension,\n                familyHistoryconsanguineousMarriage: patient.patientDTwoData.familyHistoryconsanguineousMarriage,\n                familyHistoryothers: patient.patientDTwoData.familyHistoryothers,\n                clinicalFindings: patient.patientDTwoData.clinicalFindings,\n                diagnosis: patient.patientDTwoData.diagnosis,\n                prognosis: patient.patientDTwoData.prognosis,\n                investigations: patient.patientDTwoData.investigations,\n                radiographs: patient.patientDTwoData.radiographs,\n                treatmentPlan: patient.patientDTwoData.treatmentPlan,\n                treatmentDone: patient.patientDTwoData.treatmentDone,\n            });\n        }\n        if (!patient) {\n            history.push(\"/\");\n        }\n\n\n    }, [dispatch, history, success])\n\n    const submitHandler = (patientData) => {\n        dispatch(updatePatientDataInDepartment(user.department, patientId, patientData));\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={`Update D2 data`} />\n            <Flex\n                minH={'100vh'}\n                align={'center'}\n                justify={'center'}\n                bg={useColorModeValue('gray.50', 'gray.800')}>\n                {\n                    patient &&\n                    <Stack spacing={[4, 8]} mx={'auto'} w={[400, 500, 800]} py={[6, 12]} px={[1, 6]}>\n                        <Stack align={'center'}>\n                            <Heading fontSize={['2xl', '3xl', '4xl']}>Update D2 Data</Heading>\n                        </Stack>\n                        <Box\n                            rounded={'lg'}\n                            bg={useColorModeValue('white', 'gray.700')}\n                            boxShadow={'lg'}\n                            p={8}>\n                            <SimpleGrid minChildWidth=\"150px\" spacing=\"30px\" alignItems=\"center\">\n                                <Box>\n                                    OP Id <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.outPatientId}</Text>\n                                </Box>\n                                <Box>\n                                    Name <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.name}</Text>\n                                </Box>\n                                <Box>\n                                    Age <Text fontSize=\"lg\" fontWeight=\"bold\"> {patient.age}</Text>\n                                </Box>\n                                <Box>\n                                    Contact No. <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.contactNumber}</Text>\n                                </Box>\n                                <Box>\n                                    Occupation <Text fontSize=\"lg\" fontWeight=\"bold\">{patient.occupation}</Text>\n                                </Box>\n\n                            </SimpleGrid>\n                            <Box mt={3} mb={3}>\n                                Residential Address<Text fontSize=\"md\" fontWeight=\"bold\"> {patient.residentialAddress}</Text>\n                            </Box>\n                            <Stack spacing={4}>\n                                <Formik\n                                    enableReinitialize\n                                    initialValues={loadedValues || initialValues}\n                                    onSubmit={(values) => {\n                                        submitHandler(values);\n                                    }}\n                                >\n                                    {() => (\n                                        <Form>\n                                            <InputControl hidden name=\"id\" />\n\n                                            <InputControl mt={3} isReadOnly={user.department !== 'D2'} name=\"chiefComplaint\" label=\"Chief Complaint\" />\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}> Medical History</FormLabel>\n\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorydiabetes\">Diabetes</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryhypertension\">Hypertension</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorycardiacDisorder\">Cardiac Disorder</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryrheumaticFever\">Rheumatic Fever</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryepilepsy\">Epilepsy</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorybleedingDisorders\">\n\n                                                Bleeding Disorders\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryjaundice\">Jaundice</CheckboxSingleControl>\n\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryhepatitis\">Hepatitis</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryasthma\">Asthma</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorytyphoid\">Typhoid</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorydrugAllergy\">\n                                                Drug Allergy\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryallergicToLAInjections\">\n                                                Allergic to L.A Injections\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryanaemia\">\n                                                Anaemia\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorypregnancy\">\n                                                Pregnancy\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistorymenstrualCycle\">\n                                                Menstrual Cycle\n                                            </CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"medicalHistoryothers\">\n                                                Others\n                                            </CheckboxSingleControl>\n\n                                            <FormLabel borderRadius={\"10\"} bg={\"blue.300\"} m={5} textAlign={\"center\"}>Family History </FormLabel>\n\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"familyHistorydiabetes\">Diabetes</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"familyHistorybloodDyscrasias\">Blood Dyscrasias</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"familyHistoryhypertension\">Hypertension</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"familyHistoryconsanguineousMarriage\">Consanguineous Marriage</CheckboxSingleControl>\n                                            <CheckboxSingleControl mt={3} isDisabled={user.department !== 'D2'} name=\"familyHistoryothers\">Others</CheckboxSingleControl>\n\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"clinicalFindings\" label=\"Clinical Findings\" />\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"diagnosis\" label=\"Diagnosis\" />\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"prognosis\" label=\"Prognosis\" />\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"investigations\" label=\"Investigations\" />\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"radiographs\" label=\"Radiographs\" />\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"treatmentPlan\" label=\"Treatment Plan\" />\n                                            <TextareaControl mt={3} isReadOnly={user.department !== 'D2'} name=\"treatmentDone\" label=\"Treatment Done\" />\n\n                                            <Stack spacing={10} mt={3}>\n                                                <Button\n                                                    hidden={user.department !== 'D2'}\n                                                    type={\"submit\"}\n                                                    boxShadow={\n                                                        '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n                                                    }\n                                                    bg={'blue.400'}\n                                                    color={'white'}\n                                                    _hover={{\n                                                        bg: 'blue.500',\n                                                    }}>\n                                                    Update\n                                                </Button>\n                                            </Stack>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </Stack>\n                        </Box>\n                    </Stack>\n                }\n            </Flex>\n            {loading && <Loader />}\n        </Fragment >\n    )\n}\n\nexport default D2\n\nD2.propTypes = {\n    history: PropTypes.any,\n    match: PropTypes.any,\n};","import {\n    Button, Heading,\n} from '@chakra-ui/react'\nimport React, { Fragment } from 'react'\n\nconst D2 = () => {\n    const submitHandler = (e) => {\n        e.preventDefault();\n    }\n    return (\n        <Fragment>\n            <div className=\"container wrapper my-5\">\n                <div className=\"row align-items-center justify-content-center\">\n                    <div className=\"col-12 col-md-8\">\n                        <form className=\"p-3 shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                            <div className=\"form-group\">\n                                <Heading fontSize={'2xl'}>Patient Name (ID)</Heading>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name_field\">Chief Complaint</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>History of presenting illness</label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Medical History</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Surgical History</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Dental History</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Personal History</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-row form-group\">\n                                <label className=\"col\">Diet</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"col form-control\"\n                                />\n                            </div>\n                            <div className=\"form-row form-group\">\n                                <label className=\"col\">Personal Habits</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"col form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Family History</label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Marital History</label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <hr />\n                            <label className=\"font-weight-bolder p-0 m-0\">General Examination</label>\n                            <hr />\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Stature</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Appearance</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Built</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Nourishment</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Structural Alterations, Deformities</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Hair</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Skin</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Pallor</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Icterus</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Pedal Edema</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Cyanosis</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <hr />\n                            <label className=\"font-weight-bolder p-0 m-0\">Vital Signs</label>\n                            <hr />\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">B.P.</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Respiratory rate</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Pulse rate</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Temperature</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <hr />\n                            <label className=\"font-weight-bolder p-0 m-0\">Systematic Examination</label>\n                            <hr />\n                            <div className=\"form-group\">\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">CVS</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">RS</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">GIT</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">CND</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Urogenital System</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <hr />\n                            <label className=\"font-weight-bolder p-0 m-0\">Local Examination</label>\n                            <hr />\n                            <div className=\"form-group text-center\">\n                                <label className=\"font-italic\">Extra Oral Examination</label>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Facial symmetry</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Ear, Nose, Eye</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">TMJ</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Lips</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Maxillary sinus tenderness</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Lymph Nodes</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-group text-center\">\n                                <label className=\"font-italic\">Intra Oral Examination</label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Hard tissue Examination</label>\n                            </div>\n                            <hr />\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Opening of the mouth</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Interincisal distance</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Jaw Deviation</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-group text-center\">\n                                <label className=\"col-12 font-italic\">Teeth</label>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Number</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Size</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Shape</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Colour</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Missing Tooth</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Restored Tooth</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Stains </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Caries </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Attrition</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Abrasion</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Erosion</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Mobility</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Root stumps</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\"> Fracture</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\"> Retained deciduous</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\"> Partially erupted</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\"> Developmental Anomalies</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Soft tissue Examination</label>\n                            </div>\n                            <hr />\n                            <div className=\"form-group text-center\">\n                                <label className=\"col-12 font-italic\">Gingiva</label>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Colour</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Contour</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\"> Consistency</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Calculus </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Gingival recession</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Periodontal Pocket</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\">Alveolar Mucosa</label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\">Buccal Mucosa</label>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Colour</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Consistency</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Opening of Stenson’s duct</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Labial Mucosa </label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Palate</label>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Hard Palate </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Soft Palate </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Tongue</label>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Size</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Movement</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Attachment</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Dorsal Surface</label>\n                                <select name=\"\" id=\"\" className=\"col form-control\">\n                                    <option value=\"Circumvallate papillae\">Circumvallate papillae</option>\n                                    <option value=\"Filliform papillae\">Filliform papillae</option>\n                                    <option value=\"Fungiform papillae\">Fungiform papillae</option>\n                                </select>\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Ventral Surface</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\">Edge</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col\"> Lateral Surface</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control col\"\n                                />\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Tonsils </label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Floor of the mouth </label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Pillars of the fauces</label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Examination of the lesion</label>\n                            </div>\n                            <hr />\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Inspection</label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\"> Palpation</label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <div className=\"form-row form-group text-center\">\n                                <label className=\"col-12 font-italic\">Summary</label>\n                                <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            </div>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Provisional Diagonosis</label>\n                            </div>\n                            <hr />\n                            <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Investigations</label>\n                            </div>\n                            <hr />\n                            <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Final Diagonosis</label>\n                            </div>\n                            <hr />\n                            <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            <hr />\n                            <div className=\"form-group\">\n                                <label className=\"p-0 m-0 font-weight-bolder\">Treatment Plan</label>\n                            </div>\n                            <hr />\n                            <textarea className=\"col-12 form-control\" cols=\"30\"></textarea>\n                            <hr />\n                            <div className=\"form-row align-items-center form-group\">\n                                <label className=\"col-4 font-weight-bolder\">Referal to Departments</label>\n                                <div className=\"col\" >\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Periodontia\n                                        </label>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Oral \t&amp; Maxillo Facial Surgery\n                                        </label>\n                                    </div> <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Conservative dentistry &amp; Endodontia\n                                        </label>\n                                    </div> <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Prosthodontia\n                                        </label>\n                                    </div> <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Pedodontia\n                                        </label>\n                                    </div> <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Orthodontia\n                                        </label>\n                                    </div> <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Public Health dentistry\n                                        </label>\n                                    </div> <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                            Department of Oral &amp; Maxillo Facial Pathology\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <Button\n                                w=\"100%\"\n                                type={\"submit\"}\n                                bg={'blue.400'}\n                                color={'white'}\n                                _hover={{\n                                    bg: 'blue.500',\n                                }}>\n                                UPLOAD\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default D2\n","import { Button, Heading } from '@chakra-ui/react';\nimport React, { Fragment } from 'react';\nconst D2 = () => {\n    const submitHandler = (e) => {\n        e.preventDefault();\n    }\n    return (\n        <Fragment>\n            <div className=\"container wrapper my-5\">\n                <div className=\"row align-items-center justify-content-center\">\n                    <div className=\"col-12 col-md-8\">\n                        <form className=\"p-3 shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                            <div className=\"form-group\">\n                                <Heading fontSize={'2xl'}>Patient Name (ID)</Heading>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name_field\">Chief Complaint</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\">Medical History</label>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Diabetes\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Hypertension\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Cardiac Disorder\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Rheumatic Fever\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Epilepsy\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Bleeding Disorders\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Jaundice\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Hepatitis\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Asthma\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Typhoid\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Drug Allergy\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Allergic to L.A Injections\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Anaemia\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Pregnancy\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Menstrual Cycle\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Others\n                                    </label>\n                                </div>\n\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\">Family History</label>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Diabetes\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Blood Dyscrasias\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Hypertension\n                                    </label>\n                                </div> <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Consanguineous Marriage\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                        Others\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\">Clinical Findings</label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\">Diagnosis </label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\"> Prognosis </label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\"> Investigations </label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\"> Radiographs </label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\"> Treatment Plan </label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"font-weight-bolder\"> Treatment Done </label>\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                />\n                            </div>\n                            <hr />\n                            <Button\n                                w=\"100%\"\n                                type={\"submit\"}\n                                bg={'blue.400'}\n                                color={'white'}\n                                _hover={{\n                                    bg: 'blue.500',\n                                }}>\n                                UPLOAD\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default D2\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport \"./App.css\"\n\nimport Header from './components/layout/Header'\nimport Footer from './components/layout/Footer'\n\nimport Home from './components/Home'\n\n// Auth or User imports\nimport Login from './components/user/Login'\nimport Register from './components/user/Register'\nimport Profile from './components/user/Profile'\nimport UpdateProfile from './components/user/UpdateProfile'\nimport UpdatePassword from './components/user/UpdatePassword'\n\n// Admin Imports\nimport PatientList from './components/admin/PatientList'\nimport NewPatient from './components/admin/NewPatient'\nimport UpdatePatient from './components/admin/UpdatePatient'\nimport UsersList from './components/admin/UsersList'\nimport UpdateUser from './components/admin/UpdateUser'\n\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux'\nimport store from './store'\nimport D1 from './components/departments/D1'\nimport D2 from './components/departments/D2'\nimport D3 from './components/departments/D3'\nimport D4 from './components/departments/D4'\n\nfunction App() {\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/search/:keyword\" component={Home} />\n\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <ProtectedRoute path=\"/D1/:patientId\" component={D1} exact />\n        <Route path=\"/D2/:patientId\" component={D2} />\n        <Route path=\"/D3\" component={D3} />\n        <Route path=\"/D4\" component={D4} />\n\n        <ProtectedRoute path=\"/me\" component={Profile} exact />\n        <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n        <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n\n      </div>\n\n      <ProtectedRoute path=\"/admin/patients\" isAdmin={true} component={PatientList} exact />\n      <ProtectedRoute path=\"/admin/patient\" isAdmin={true} component={NewPatient} exact />\n      <ProtectedRoute path=\"/admin/patient/:id\" isAdmin={true} component={UpdatePatient} exact />\n      <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n      <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n      {!loading && (!isAuthenticated || user.department !== 'Administrator') && (\n        <Footer />\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","// theme.js\n\n// 1. import `extendTheme` function\nimport { extendTheme } from \"@chakra-ui/react\"\n\n// 2. Add your color mode config\nconst config = {\n    initialColorMode: \"light\",\n    useSystemColorMode: false,\n}\n\n// 3. extend the theme\nconst theme = extendTheme({ config })\n\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from \"./theme\"\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <Provider store={store} >\n    <ChakraProvider>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </ChakraProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}